{
  "contractName": "ERC721PresetMinterPauserAutoIdUpgradeable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "previousAdminRole",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "newAdminRole",
          "type": "bytes32"
        }
      ],
      "name": "RoleAdminChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleGranted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "RoleRevoked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEFAULT_ADMIN_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MINTER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PAUSER_ROLE",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleAdmin",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getRoleMember",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        }
      ],
      "name": "getRoleMemberCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "grantRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "hasRole",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "renounceRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "role",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "revokeRole",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "baseURI",
          "type": "string"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"baseURI\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"{ERC721} token, including:  - ability for holders to burn (destroy) their tokens  - a minter role that allows for token minting (creation)  - a pauser role that allows to stop all token transfers  - token ID and URI autogeneration This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details. The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mint(address)\":{\"details\":\"Creates a new token for `to`. Its token ID will be automatically assigned (and available on the emitted {IERC721-Transfer} event), and the token URI autogenerated based on the base URI passed at construction. See {ERC721-_mint}. Requirements: - the caller must have the `MINTER_ROLE`.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"pause()\":{\"details\":\"Pauses all token transfers. See {ERC721Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenByIndex(uint256)\":{\"details\":\"See {IERC721Enumerable-tokenByIndex}.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"See {IERC721Enumerable-tokenOfOwnerByIndex}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"totalSupply()\":{\"details\":\"See {IERC721Enumerable-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"unpause()\":{\"details\":\"Unpauses all token transfers. See {ERC721Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol\":\"ERC721PresetMinterPauserAutoIdUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol\":{\"keccak256\":\"0xca5ef6ed50c212be4cffea0fd7974d659e92b1328906069f7a14e2cc1bedfbfe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1edd6602dadeb1c00d8bd54aa6cee379dae83846e5b613feefbc8cdcdae42b0\",\"dweb:/ipfs/QmbpZvED3aj3x7fr2pdUC5iDU6x5ehDxKQyj3pm2NegbhM\"]},\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x8c037e108e6db1410af9f33b3ecd147ce1ed3b1c94a8b6d25d06043cc085a1fb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce07d8d6da06c0d68278acdffff121d598ad554803719c6d0130757fc93ee72f\",\"dweb:/ipfs/QmNQTDqGc3Lsv7iiNYNNkMp2cURaii9bVT6Dfv31RdxSp9\"]},\"@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xb143dc53cd9c8a9ee1d43c9ce4a4ede1ea9795d977ce76d25e1f5c9386babc15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32c906dbf5da0d3aec449b09ab3ae3cb71e5445b03006197743f1c759f0c853c\",\"dweb:/ipfs/QmaCDf1F9DfchkHZaZiNtEh22QkJ3MyDNNtBQLVDnX1r3X\"]},\"@openzeppelin/contracts-upgradeable/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xa80b63182ace4c44cfca7cbd051ea346f85f8a069437315e280bff4f50df2851\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5566403ca33fb5b14feed3a86cfca4a8eb68b7fbb3896ebf2e4e597747bb42f8\",\"dweb:/ipfs/Qmf4gmVRJ7qa8xfytMyjGTY1kXLsJkPYhfNJwrrvifgH6S\"]},\"@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0x5ce1bdd7144d5fd5284ec2e7a008f95c8c56a384d29200a63a93f3a247c4cf3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54fd179f1133eb2e9514c5174952b38e70557266818832b12356febf2262fed2\",\"dweb:/ipfs/QmRKKg9o4EXa4i6kHXjmnh9zdpstYe2tXwe5TKBkCxdSav\"]},\"@openzeppelin/contracts-upgradeable/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol\":{\"keccak256\":\"0x8fa112fdd8e76025a9295297e9c4e29b93506c2761c1211e96229de3c04980f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://569e42d57e3269b7a3e3e8b570077637b372bb2a6d2b5f23da2c1c954a962ca5\",\"dweb:/ipfs/QmcRjYPUpWTV4PgA8bmgWWzoszfgBw7bC8ySb1gJTwR4Mn\"]},\"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":{\"keccak256\":\"0x8eee8bd8c216a3e437bf7a4c9844348f47a2d990e5b06cd96d250e33ab04c25a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6bb2af880b12be26b148ee99ac3a984168e7fc74721bab9cd44598a0669b038\",\"dweb:/ipfs/QmPfFDaXZbThJgaVim7nvxrw1RuD2xKWCG89K6pznmC8pJ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721BurnableUpgradeable.sol\":{\"keccak256\":\"0x2b17891db8f658c3abe67114df443d243be179bd975d8c2194ac970759e8286f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80972b3cde189c9846cfb7a9cf8d0c343f0b14b2a3d4a2baf9ac15c3acbcb464\",\"dweb:/ipfs/QmWeNYkWZrtqUGdrw3JB3N5v9Huu8nYcsPg51gX6LDfZvD\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721PausableUpgradeable.sol\":{\"keccak256\":\"0xcd51ece5504feb27bcd572176f6994c65010b1f5ad4a1cdc0e8774e8d1d13252\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://426df2f2fbd693fe4315ee7550e506910f89b81b6f9549f439351dae45fd9c49\",\"dweb:/ipfs/QmddLBNWssYwuhYNs2gmYfvCwGf5DkEvrFcnUV2sfMDGix\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol\":{\"keccak256\":\"0xd2353f0dc385dc7f98284afb2524954bd70a659f2ef8162bc8e64c08e06d1a2f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://362db6a549989bc351e348b7115250b8b36b459aab322933edc8f4e2deef8f7b\",\"dweb:/ipfs/QmXFH94Vdza8fdycsGk8r3jcPnzf8TTgwcfTAcuBPfiM9s\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721EnumerableUpgradeable.sol\":{\"keccak256\":\"0x356fa147144b52ef8b65e3e92f52bf22798261de62866fed67f582a84ea4395c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e34678083c93dfb068fa9f24b5430ad14766d59eb21ece010680cf12998d144\",\"dweb:/ipfs/QmSrr5Vf3VAZ1aP1eM6xhxnP5bRfBrbKADwo2K2ktKqBeW\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721MetadataUpgradeable.sol\":{\"keccak256\":\"0xd0c5281be6a586b701a61f43ec6b8e2ccd7125b0c199e4b518d17353fed75a39\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4665ed2928ccbfabc15200b2d38623797a2a0ab8543f65d5cfcc99b49c2aa69c\",\"dweb:/ipfs/QmcSQhqpfyCx8dCu1KeQYFeR1qdzdP3ouzbR3Mt412zQWf\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0x4ce77be790634c93c28b3591de5bfcabfb1fc5d88108c7706206b57e62c1016f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b8bb17564a4b49630bceb18aa1a14b1dde92286053c5c5bf40a5bfe6f28e83fc\",\"dweb:/ipfs/QmSeMzfAN3SyQXRaxgi99Mfupx5ptnpkYw6k4QY5VY7SCU\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0x10f4166c060c35ddbf8d466be69cec5f97595a54e6ba54e8a6f9c21e47246c8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f956df4dac2c62f29f1dc317515d4343ce8b9a9b9181410f38bd8fd3d1465c0f\",\"dweb:/ipfs/QmUDpgono7jekfMRZmCwaWfr7BNqSijWb7RppgJBJomM9o\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x21d0ea14543f00187a5015b87993127dcf56d4ed40406f5a32a671a103209213\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c8229a6611766c940789e0cb9a847398b9002a5ed557918ee8bfeb18ea36603\",\"dweb:/ipfs/QmfUbx4y6gjb9oj8V2qe9W5Eph31kimDdtpSGXa9po4u3L\"]},\"@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol\":{\"keccak256\":\"0x4caa1b51640627ae88c364c188d5127182f02d96b954b7402ef94bc23523641a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ccfc46edcb54a2415e82f0a2f5f1417696c2dbd5f64cb9c2dfdcde7a43a4b990\",\"dweb:/ipfs/QmdJA5C5RA5RoBrxg9M9XD5pk1QUT3F5cqRkgaPyMC6Bdk\"]},\"@openzeppelin/contracts-upgradeable/utils/EnumerableMapUpgradeable.sol\":{\"keccak256\":\"0x61aebee3a61aa4a6232d7bac8113d86f9390ce8e3e3ff5a5d564fbb3785c46bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b572b5d7ec7a1503840dfd41912fc8a9fc0110aa4dcf3ccfba6e412cdbe700a7\",\"dweb:/ipfs/QmZ9LhfaBZE3LkMVLh5WcM7FNrW7u8APP2nqqT9rT8JfuV\"]},\"@openzeppelin/contracts-upgradeable/utils/EnumerableSetUpgradeable.sol\":{\"keccak256\":\"0x3f53ff087805b132a913a678d9b261853b83adee630355e536361873e5b8dca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://754e29970105b56cabadf6e528f6903f1e3d6ae02820dd2757515f515f134231\",\"dweb:/ipfs/QmNvBijMwtWLP8szNyANTeuPGMD6gdbrXERMoZykAHhXtq\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x2015828737ff36c8a3f1d4e65041beb6c70006f82816017df6a304b52228ef69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99446fd768aa14febd0b0419f9b3b948c65bf5092285de337d4a3e60150de8ee\",\"dweb:/ipfs/QmNumAsvHvHYDNuBAPSY34p3RKXqEFaBLQFAd2fFWUhzfP\"]},\"@openzeppelin/contracts-upgradeable/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xc2d44aebb65ff0b69c7104ee73a9b088abeef0d123c7c85bab1538e902a0c54e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8383e8c2cbd4ac9fb623002422866b5c23b2aa6b5d7edc3e239f8cecfc088ad6\",\"dweb:/ipfs/QmVYyvcN6o7dUuupa25YzWHAAmxArLAXCzdDHFB8kh7p2c\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612e97806100206000396000f3fe608060405234801561001057600080fd5b506004361061018b5760003560e01c806301ffc9a71461019057806306fdde03146101cb578063081812fc14610248578063095ea7b31461028157806318160ddd146102af57806323b872dd146102c9578063248a9ca3146102ff5780632f2ff15d1461031c5780632f745c591461034857806336568abe146103745780633f4ba83a146103a057806342842e0e146103a857806342966c68146103de5780634f6ccce7146103fb5780635c975abb146104185780636352211e146104205780636a6278421461043d5780636c0360eb1461046357806370a082311461046b5780638456cb59146104915780639010d07c1461049957806391d14854146104bc57806395d89b41146104e8578063a217fddf146104f0578063a22cb465146104f8578063a6487c5314610526578063b88d4fde146106d4578063c87b56dd14610798578063ca15c873146107b5578063d5391393146107d2578063d547741f146107da578063e63ab1e914610806578063e985e9c51461080e575b600080fd5b6101b7600480360360208110156101a657600080fd5b50356001600160e01b03191661083c565b604080519115158252519081900360200190f35b6101d361085f565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561020d5781810151838201526020016101f5565b50505050905090810190601f16801561023a5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102656004803603602081101561025e57600080fd5b50356108f5565b604080516001600160a01b039092168252519081900360200190f35b6102ad6004803603604081101561029757600080fd5b506001600160a01b038135169060200135610957565b005b6102b7610a32565b60408051918252519081900360200190f35b6102ad600480360360608110156102df57600080fd5b506001600160a01b03813581169160208101359091169060400135610a43565b6102b76004803603602081101561031557600080fd5b5035610a9a565b6102ad6004803603604081101561033257600080fd5b50803590602001356001600160a01b0316610aaf565b6102b76004803603604081101561035e57600080fd5b506001600160a01b038135169060200135610b1b565b6102ad6004803603604081101561038a57600080fd5b50803590602001356001600160a01b0316610b46565b6102ad610ba7565b6102ad600480360360608110156103be57600080fd5b506001600160a01b03813581169160208101359091169060400135610c06565b6102ad600480360360208110156103f457600080fd5b5035610c21565b6102b76004803603602081101561041157600080fd5b5035610c73565b6101b7610c89565b6102656004803603602081101561043657600080fd5b5035610c92565b6102ad6004803603602081101561045357600080fd5b50356001600160a01b0316610cba565b6101d3610d2e565b6102b76004803603602081101561048157600080fd5b50356001600160a01b0316610d8f565b6102ad610df7565b610265600480360360408110156104af57600080fd5b5080359060200135610e54565b6101b7600480360360408110156104d257600080fd5b50803590602001356001600160a01b0316610e6c565b6101d3610e84565b6102b7610ee5565b6102ad6004803603604081101561050e57600080fd5b506001600160a01b0381351690602001351515610eea565b6102ad6004803603606081101561053c57600080fd5b810190602081018135600160201b81111561055657600080fd5b82018360208201111561056857600080fd5b803590602001918460018302840111600160201b8311171561058957600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156105db57600080fd5b8201836020820111156105ed57600080fd5b803590602001918460018302840111600160201b8311171561060e57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561066057600080fd5b82018360208201111561067257600080fd5b803590602001918460018302840111600160201b8311171561069357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610feb945050505050565b6102ad600480360360808110156106ea57600080fd5b6001600160a01b03823581169260208101359091169160408201359190810190608081016060820135600160201b81111561072457600080fd5b82018360208201111561073657600080fd5b803590602001918460018302840111600160201b8311171561075757600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061109b945050505050565b6101d3600480360360208110156107ae57600080fd5b50356110f3565b6102b7600480360360208110156107cb57600080fd5b503561139a565b6102b76113b1565b6102ad600480360360408110156107f057600080fd5b50803590602001356001600160a01b03166113c3565b6102b761141c565b6101b76004803603604081101561082457600080fd5b506001600160a01b038135811691602001351661142e565b6001600160e01b0319811660009081526065602052604090205460ff165b919050565b609c8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108eb5780601f106108c0576101008083540402835291602001916108eb565b820191906000526020600020905b8154815290600101906020018083116108ce57829003601f168201915b5050505050905090565b60006109008261145c565b61093b5760405162461bcd60e51b815260040180806020018281038252602c815260200180612c50602c913960400191505060405180910390fd5b506000908152609a60205260409020546001600160a01b031690565b600061096282610c92565b9050806001600160a01b0316836001600160a01b031614156109b55760405162461bcd60e51b8152600401808060200182810382526021815260200180612d346021913960400191505060405180910390fd5b806001600160a01b03166109c7611469565b6001600160a01b031614806109e857506109e8816109e3611469565b61142e565b610a235760405162461bcd60e51b8152600401808060200182810382526038815260200180612b756038913960400191505060405180910390fd5b610a2d838361146d565b505050565b6000610a3e60986114db565b905090565b610a54610a4e611469565b826114e6565b610a8f5760405162461bcd60e51b8152600401808060200182810382526031815260200180612d556031913960400191505060405180910390fd5b610a2d83838361158a565b60009081526033602052604090206002015490565b600082815260336020526040902060020154610ad290610acd611469565b610e6c565b610b0d5760405162461bcd60e51b815260040180806020018281038252602f815260200180612a56602f913960400191505060405180910390fd5b610b1782826116c4565b5050565b6001600160a01b0382166000908152609760205260408120610b3d908361172d565b90505b92915050565b610b4e611469565b6001600160a01b0316816001600160a01b031614610b9d5760405162461bcd60e51b815260040180806020018281038252602f815260200180612e33602f913960400191505060405180910390fd5b610b178282611739565b610bc1600080516020612c7c833981519152610acd611469565b610bfc5760405162461bcd60e51b8152600401808060200182810382526040815260200180612df36040913960400191505060405180910390fd5b610c046117a2565b565b610a2d8383836040518060200160405280600081525061109b565b610c2c610a4e611469565b610c675760405162461bcd60e51b8152600401808060200182810382526030815260200180612dc36030913960400191505060405180910390fd5b610c7081611840565b50565b600080610c816098846118fb565b509392505050565b60fb5460ff1690565b6000610b4082604051806060016040528060298152602001612bd76029913960989190611917565b610cd4600080516020612cf4833981519152610acd611469565b610d0f5760405162461bcd60e51b815260040180806020018281038252603d815260200180612d86603d913960400191505060405180910390fd5b610d2381610d1e61015f61192e565b611932565b610c7061015f611a4d565b609f8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108eb5780601f106108c0576101008083540402835291602001916108eb565b60006001600160a01b038216610dd65760405162461bcd60e51b815260040180806020018281038252602a815260200180612bad602a913960400191505060405180910390fd5b6001600160a01b0382166000908152609760205260409020610b40906114db565b610e11600080516020612c7c833981519152610acd611469565b610e4c5760405162461bcd60e51b815260040180806020018281038252603e815260200180612ab7603e913960400191505060405180910390fd5b610c04611a56565b6000828152603360205260408120610b3d908361172d565b6000828152603360205260408120610b3d9083611ad7565b609d8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156108eb5780601f106108c0576101008083540402835291602001916108eb565b600081565b610ef2611469565b6001600160a01b0316826001600160a01b03161415610f54576040805162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b604482015290519081900360640190fd5b80609b6000610f61611469565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610fa5611469565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405180821515815260200191505060405180910390a35050565b600054610100900460ff16806110045750611004611aec565b80611012575060005460ff16155b61104d5760405162461bcd60e51b815260040180806020018281038252602e815260200180612c00602e913960400191505060405180910390fd5b600054610100900460ff16158015611078576000805460ff1961ff0019909116610100171660011790555b611083848484611af2565b8015611095576000805461ff00191690555b50505050565b6110ac6110a6611469565b836114e6565b6110e75760405162461bcd60e51b8152600401808060200182810382526031815260200180612d556031913960400191505060405180910390fd5b61109584848484611bc4565b60606110fe8261145c565b6111395760405162461bcd60e51b815260040180806020018281038252602f815260200180612cc5602f913960400191505060405180910390fd5b6000828152609e602090815260409182902080548351601f60026000196101006001861615020190931692909204918201849004840281018401909452808452606093928301828280156111ce5780601f106111a3576101008083540402835291602001916111ce565b820191906000526020600020905b8154815290600101906020018083116111b157829003601f168201915b5050609f54939450505050600260001961010060018416150201909116046111f757905061085a565b8051156112c857609f81604051602001808380546001816001161561010002031660029004801561125f5780601f1061123d57610100808354040283529182019161125f565b820191906000526020600020905b81548152906001019060200180831161124b575b5050825160208401908083835b6020831061128b5780518252601f19909201916020918201910161126c565b6001836020036101000a0380198251168184511680821785525050505050509050019250505060405160208183030381529060405291505061085a565b609f6112d384611c16565b60405160200180838054600181600116156101000203166002900480156113315780601f1061130f576101008083540402835291820191611331565b820191906000526020600020905b81548152906001019060200180831161131d575b5050825160208401908083835b6020831061135d5780518252601f19909201916020918201910161133e565b6001836020036101000a03801982511681845116808217855250505050505090500192505050604051602081830303815290604052915050919050565b6000818152603360205260408120610b40906114db565b600080516020612cf483398151915281565b6000828152603360205260409020600201546113e190610acd611469565b610b9d5760405162461bcd60e51b8152600401808060200182810382526030815260200180612b456030913960400191505060405180910390fd5b600080516020612c7c83398151915281565b6001600160a01b039182166000908152609b6020908152604080832093909416825291909152205460ff1690565b6000610b40609883611cf0565b3390565b6000818152609a6020526040902080546001600160a01b0319166001600160a01b03841690811790915581906114a282610c92565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000610b408261192e565b60006114f18261145c565b61152c5760405162461bcd60e51b815260040180806020018281038252602c815260200180612b19602c913960400191505060405180910390fd5b600061153783610c92565b9050806001600160a01b0316846001600160a01b031614806115725750836001600160a01b0316611567846108f5565b6001600160a01b0316145b806115825750611582818561142e565b949350505050565b826001600160a01b031661159d82610c92565b6001600160a01b0316146115e25760405162461bcd60e51b8152600401808060200182810382526029815260200180612c9c6029913960400191505060405180910390fd5b6001600160a01b0382166116275760405162461bcd60e51b8152600401808060200182810382526024815260200180612af56024913960400191505060405180910390fd5b611632838383611cfc565b61163d60008261146d565b6001600160a01b038316600090815260976020526040902061165f9082611d07565b506001600160a01b03821660009081526097602052604090206116829082611d13565b5061168f60988284611d1f565b5080826001600160a01b0316846001600160a01b0316600080516020612d1483398151915260405160405180910390a4505050565b60008281526033602052604090206116dc9082611d35565b15610b17576116e9611469565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610b3d8383611d4a565b60008281526033602052604090206117519082611dae565b15610b175761175e611469565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60fb5460ff166117f0576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b60fb805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611823611469565b604080516001600160a01b039092168252519081900360200190a1565b600061184b82610c92565b905061185981600084611cfc565b61186460008361146d565b6000828152609e602052604090205460026000196101006001841615020190911604156118a2576000828152609e602052604081206118a291612931565b6001600160a01b03811660009081526097602052604090206118c49083611d07565b506118d0609883611dc3565b5060405182906000906001600160a01b03841690600080516020612d14833981519152908390a45050565b600080808061190a8686611dcf565b9097909650945050505050565b6000611924848484611e4a565b90505b9392505050565b5490565b6001600160a01b03821661198d576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b6119968161145c565b156119e7576040805162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b604482015290519081900360640190fd5b6119f360008383611cfc565b6001600160a01b0382166000908152609760205260409020611a159082611d13565b50611a2260988284611d1f565b5060405181906001600160a01b03841690600090600080516020612d14833981519152908290a45050565b80546001019055565b60fb5460ff1615611aa1576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b60fb805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611823611469565b6000610b3d836001600160a01b038416611f14565b303b1590565b600054610100900460ff1680611b0b5750611b0b611aec565b80611b19575060005460ff16155b611b545760405162461bcd60e51b815260040180806020018281038252602e815260200180612c00602e913960400191505060405180910390fd5b600054610100900460ff16158015611b7f576000805460ff1961ff0019909116610100171660011790555b611b87611f2c565b611b8f611f2c565b611b97611fcd565b611ba1848461206a565b611ba9611f2c565b611bb1612165565b611bb9611f2c565b611083848484612210565b611bcf84848461158a565b611bdb848484846122ec565b6110955760405162461bcd60e51b8152600401808060200182810382526032815260200180612a856032913960400191505060405180910390fd5b606081611c3b57506040805180820190915260018152600360fc1b602082015261085a565b8160005b8115611c5357600101600a82049150611c3f565b6060816001600160401b0381118015611c6b57600080fd5b506040519080825280601f01601f191660200182016040528015611c96576020820181803683370190505b50859350905060001982015b8315611ce757600a840660300160f81b82828060019003935081518110611cc557fe5b60200101906001600160f81b031916908160001a905350600a84049350611ca2565b50949350505050565b6000610b3d8383611f14565b610a2d838383612454565b6000610b3d83836124a3565b6000610b3d8383612569565b600061192484846001600160a01b0385166125b3565b6000610b3d836001600160a01b038416612569565b81546000908210611d8c5760405162461bcd60e51b8152600401808060200182810382526022815260200180612a096022913960400191505060405180910390fd5b826000018281548110611d9b57fe5b9060005260206000200154905092915050565b6000610b3d836001600160a01b0384166124a3565b6000610b3d838361264a565b815460009081908310611e135760405162461bcd60e51b8152600401808060200182810382526022815260200180612c2e6022913960400191505060405180910390fd5b6000846000018481548110611e2457fe5b906000526020600020906002020190508060000154816001015492509250509250929050565b60008281526001840160205260408120548281611ee55760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015611eaa578181015183820152602001611e92565b50505050905090810190601f168015611ed75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50846000016001820381548110611ef857fe5b9060005260206000209060020201600101549150509392505050565b60009081526001919091016020526040902054151590565b600054610100900460ff1680611f455750611f45611aec565b80611f53575060005460ff16155b611f8e5760405162461bcd60e51b815260040180806020018281038252602e815260200180612c00602e913960400191505060405180910390fd5b600054610100900460ff16158015611fb9576000805460ff1961ff0019909116610100171660011790555b8015610c70576000805461ff001916905550565b600054610100900460ff1680611fe65750611fe6611aec565b80611ff4575060005460ff16155b61202f5760405162461bcd60e51b815260040180806020018281038252602e815260200180612c00602e913960400191505060405180910390fd5b600054610100900460ff1615801561205a576000805460ff1961ff0019909116610100171660011790555b611fb96301ffc9a760e01b61271e565b600054610100900460ff16806120835750612083611aec565b80612091575060005460ff16155b6120cc5760405162461bcd60e51b815260040180806020018281038252602e815260200180612c00602e913960400191505060405180910390fd5b600054610100900460ff161580156120f7576000805460ff1961ff0019909116610100171660011790555b825161210a90609c906020860190612975565b50815161211e90609d906020850190612975565b5061212f6380ac58cd60e01b61271e565b61213f635b5e139f60e01b61271e565b61214f63780e9d6360e01b61271e565b8015610a2d576000805461ff0019169055505050565b600054610100900460ff168061217e575061217e611aec565b8061218c575060005460ff16155b6121c75760405162461bcd60e51b815260040180806020018281038252602e815260200180612c00602e913960400191505060405180910390fd5b600054610100900460ff161580156121f2576000805460ff1961ff0019909116610100171660011790555b60fb805460ff191690558015610c70576000805461ff001916905550565b600054610100900460ff16806122295750612229611aec565b80612237575060005460ff16155b6122725760405162461bcd60e51b815260040180806020018281038252602e815260200180612c00602e913960400191505060405180910390fd5b600054610100900460ff1615801561229d576000805460ff1961ff0019909116610100171660011790555b6122af60006122aa611469565b610b0d565b6122c9600080516020612cf48339815191526122aa611469565b6122e3600080516020612c7c8339815191526122aa611469565b611083826127a1565b6000612300846001600160a01b03166127b4565b61230c57506001611582565b606061241a630a85bd0160e11b612321611469565b88878760405160240180856001600160a01b03168152602001846001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612388578181015183820152602001612370565b50505050905090810190601f1680156123b55780820380516001836020036101000a031916815260200191505b5095505050505050604051602081830303815290604052906001600160e01b0319166020820180516001600160e01b038381831617835250505050604051806060016040528060328152602001612a85603291396001600160a01b03881691906127ba565b9050600081806020019051602081101561243357600080fd5b50516001600160e01b031916630a85bd0160e11b1492505050949350505050565b61245f838383610a2d565b612467610c89565b15610a2d5760405162461bcd60e51b815260040180806020018281038252602b815260200180612a2b602b913960400191505060405180910390fd5b6000818152600183016020526040812054801561255f57835460001980830191908101906000908790839081106124d657fe5b90600052602060002001549050808760000184815481106124f357fe5b60009182526020808320909101929092558281526001898101909252604090209084019055865487908061252357fe5b60019003818190600052602060002001600090559055866001016000878152602001908152602001600020600090556001945050505050610b40565b6000915050610b40565b60006125758383611f14565b6125ab57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610b40565b506000610b40565b600082815260018401602052604081205480612618575050604080518082018252838152602080820184815286546001818101895560008981528481209551600290930290950191825591519082015586548684528188019092529290912055611927565b8285600001600183038154811061262b57fe5b9060005260206000209060020201600101819055506000915050611927565b6000818152600183016020526040812054801561255f578354600019808301919081019060009087908390811061267d57fe5b906000526020600020906002020190508087600001848154811061269d57fe5b6000918252602080832084546002909302019182556001938401549184019190915583548252898301905260409020908401905586548790806126dc57fe5b6000828152602080822060026000199094019384020182815560019081018390559290935588815289820190925260408220919091559450610b409350505050565b6001600160e01b0319808216141561277c576040805162461bcd60e51b815260206004820152601c60248201527b115490cc4d8d4e881a5b9d985b1a59081a5b9d195c999858d9481a5960221b604482015290519081900360640190fd5b6001600160e01b0319166000908152606560205260409020805460ff19166001179055565b8051610b1790609f906020840190612975565b3b151590565b6060611924848460008560606127cf856127b4565b612820576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b6020831061285f5780518252601f199092019160209182019101612840565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146128c1576040519150601f19603f3d011682016040523d82523d6000602084013e6128c6565b606091505b509150915081156128da5791506115829050565b8051156128ea5780518082602001fd5b60405162461bcd60e51b8152602060048201818152865160248401528651879391928392604401919085019080838360008315611eaa578181015183820152602001611e92565b50805460018160011615610100020316600290046000825580601f106129575750610c70565b601f016020900490600052602060002090810190610c7091906129f3565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106129b657805160ff19168380011785556129e3565b828001600101855582156129e3579182015b828111156129e35782518255916020019190600101906129c8565b506129ef9291506129f3565b5090565b5b808211156129ef57600081556001016129f456fe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734552433732315061757361626c653a20746f6b656e207472616e73666572207768696c6520706175736564416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f206772616e744552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f2070617573654552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e416363657373436f6e74726f6c3a2073656e646572206d75737420626520616e2061646d696e20746f207265766f6b654552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e64734552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644552433732315072657365744d696e7465725061757365724175746f49643a206d7573742068617665206d696e74657220726f6c6520746f206d696e744552433732314275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f7665644552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f20756e7061757365416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66a26469706673582212201a9ba2bb55ca44312ced0d96b8013dd59b2fdab8dd4c605633df2979affd7ea864736f6c634300060c0033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "sourceMap": "994:3512:15:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "994:3512:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1159:140:11;;;;;;;;;;;;;;;;-1:-1:-1;1159:140:11;-1:-1:-1;;;;;;1159:140:11;;:::i;:::-;;;;;;;;;;;;;;;;;;5080:90:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7687:209;;;;;;;;;;;;;;;;-1:-1:-1;7687:209:25;;:::i;:::-;;;;-1:-1:-1;;;;;7687:209:25;;;;;;;;;;;;;;7245:381;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7245:381:25;;;;;;;;:::i;:::-;;6755:200;;;:::i;:::-;;;;;;;;;;;;;;;;8535:300;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8535:300:25;;;;;;;;;;;;;;;;;:::i;4642:112:10:-;;;;;;;;;;;;;;;;-1:-1:-1;4642:112:10;;:::i;5004:223::-;;;;;;;;;;;;;;;;-1:-1:-1;5004:223:10;;;;;;-1:-1:-1;;;;;5004:223:10;;:::i;6532:152:25:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6532:152:25;;;;;;;;:::i;6178:205:10:-;;;;;;;;;;;;;;;;-1:-1:-1;6178:205:10;;;;;;-1:-1:-1;;;;;6178:205:10;;:::i;4078:182:15:-;;;:::i;8901:149:25:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8901:149:25;;;;;;;;;;;;;;;;;:::i;812:241:23:-;;;;;;;;;;;;;;;;-1:-1:-1;812:241:23;;:::i;7027:161:25:-;;;;;;;;;;;;;;;;-1:-1:-1;7027:161:25;;:::i;1293:76:34:-;;;:::i;4851:167:25:-;;;;;;;;;;;;;;;;-1:-1:-1;4851:167:25;;:::i;3090:400:15:-;;;;;;;;;;;;;;;;-1:-1:-1;3090:400:15;-1:-1:-1;;;;;3090:400:15;;:::i;6366:87:25:-;;;:::i;4583:211::-;;;;;;;;;;;;;;;;-1:-1:-1;4583:211:25;-1:-1:-1;;;;;4583:211:25;;:::i;3694:176:15:-;;;:::i;4325:136:10:-;;;;;;;;;;;;;;;;-1:-1:-1;4325:136:10;;;;;;;:::i;3310:137::-;;;;;;;;;;;;;;;;-1:-1:-1;3310:137:10;;;;;;-1:-1:-1;;;;;3310:137:10;;:::i;5234:94:25:-;;;:::i;2087:49:10:-;;;:::i;7963:290:25:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7963:290:25;;;;;;;;;;:::i;1168:189:15:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1168:189:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1168:189:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1168:189:15;;;;;;;;-1:-1:-1;1168:189:15;;-1:-1:-1;;;;;1168:189:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1168:189:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1168:189:15;;;;;;;;-1:-1:-1;1168:189:15;;-1:-1:-1;;;;;1168:189:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1168:189:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1168:189:15;;-1:-1:-1;1168:189:15;;-1:-1:-1;;;;;1168:189:15:i;9116:282:25:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9116:282:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9116:282:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9116:282:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9116:282:25;;-1:-1:-1;9116:282:25;;-1:-1:-1;;;;;9116:282:25:i;5394:740::-;;;;;;;;;;;;;;;;-1:-1:-1;5394:740:25;;:::i;3615:125:10:-;;;;;;;;;;;;;;;;-1:-1:-1;3615:125:10;;:::i;1426:62:15:-;;;:::i;5461:226:10:-;;;;;;;;;;;;;;;;-1:-1:-1;5461:226:10;;;;;;-1:-1:-1;;;;;5461:226:10;;:::i;1494:62:15:-;;;:::i;8319:154:25:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8319:154:25;;;;;;;;;;:::i;1159:140:11:-;-1:-1:-1;;;;;;1259:33:11;;1236:4;1259:33;;;:20;:33;;;;;;;;1159:140;;;;:::o;5080:90:25:-;5158:5;5151:12;;;;;;;;-1:-1:-1;;5151:12:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5126:13;;5151:12;;5158:5;;5151:12;;5158:5;5151:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5080:90;:::o;7687:209::-;7755:7;7782:16;7790:7;7782;:16::i;:::-;7774:73;;;;-1:-1:-1;;;7774:73:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7865:24:25;;;;:15;:24;;;;;;-1:-1:-1;;;;;7865:24:25;;7687:209::o;7245:381::-;7325:13;7341:16;7349:7;7341;:16::i;:::-;7325:32;;7381:5;-1:-1:-1;;;;;7375:11:25;:2;-1:-1:-1;;;;;7375:11:25;;;7367:57;;;;-1:-1:-1;;;7367:57:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7459:5;-1:-1:-1;;;;;7443:21:25;:12;:10;:12::i;:::-;-1:-1:-1;;;;;7443:21:25;;:62;;;;7468:37;7485:5;7492:12;:10;:12::i;:::-;7468:16;:37::i;:::-;7435:152;;;;-1:-1:-1;;;7435:152:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7598:21;7607:2;7611:7;7598:8;:21::i;:::-;7245:381;;;:::o;6755:200::-;6808:7;6927:21;:12;:19;:21::i;:::-;6920:28;;6755:200;:::o;8535:300::-;8694:41;8713:12;:10;:12::i;:::-;8727:7;8694:18;:41::i;:::-;8686:103;;;;-1:-1:-1;;;8686:103:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8800:28;8810:4;8816:2;8820:7;8800:9;:28::i;4642:112:10:-;4699:7;4725:12;;;:6;:12;;;;;:22;;;;4642:112::o;5004:223::-;5095:12;;;;:6;:12;;;;;:22;;;5087:45;;5119:12;:10;:12::i;:::-;5087:7;:45::i;:::-;5079:105;;;;-1:-1:-1;;;5079:105:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5195:25;5206:4;5212:7;5195:10;:25::i;:::-;5004:223;;:::o;6532:152:25:-;-1:-1:-1;;;;;6647:20:25;;6621:7;6647:20;;;:13;:20;;;;;:30;;6671:5;6647:23;:30::i;:::-;6640:37;;6532:152;;;;;:::o;6178:205:10:-;6275:12;:10;:12::i;:::-;-1:-1:-1;;;;;6264:23:10;:7;-1:-1:-1;;;;;6264:23:10;;6256:83;;;;-1:-1:-1;;;6256:83:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6350:26;6362:4;6368:7;6350:11;:26::i;4078:182:15:-;4130:34;-1:-1:-1;;;;;;;;;;;4151:12:15;:10;:12::i;4130:34::-;4122:111;;;;-1:-1:-1;;;4122:111:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4243:10;:8;:10::i;:::-;4078:182::o;8901:149:25:-;9004:39;9021:4;9027:2;9031:7;9004:39;;;;;;;;;;;;:16;:39::i;812:241:23:-;928:41;947:12;:10;:12::i;928:41::-;920:102;;;;-1:-1:-1;;;920:102:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1032:14;1038:7;1032:5;:14::i;:::-;812:241;:::o;7027:161:25:-;7094:7;;7135:22;:12;7151:5;7135:15;:22::i;:::-;-1:-1:-1;7113:44:25;7027:161;-1:-1:-1;;;7027:161:25:o;1293:76:34:-;1355:7;;;;1293:76;:::o;4851:167:25:-;4915:7;4941:70;4958:7;4941:70;;;;;;;;;;;;;;;;;:12;;:70;:16;:70::i;3090:400:15:-;3149:34;-1:-1:-1;;;;;;;;;;;3170:12:15;:10;:12::i;3149:34::-;3141:108;;;;-1:-1:-1;;;3141:108:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3410:36;3416:2;3420:25;:15;:23;:25::i;:::-;3410:5;:36::i;:::-;3456:27;:15;:25;:27::i;6366:87:25:-;6438:8;6431:15;;;;;;;;-1:-1:-1;;6431:15:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6406:13;;6431:15;;6438:8;;6431:15;;6438:8;6431:15;;;;;;;;;;;;;;;;;;;;;;;;4583:211;4647:7;-1:-1:-1;;;;;4674:19:25;;4666:74;;;;-1:-1:-1;;;4666:74:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4758:20:25;;;;;;:13;:20;;;;;:29;;:27;:29::i;3694:176:15:-;3744:34;-1:-1:-1;;;;;;;;;;;3765:12:15;:10;:12::i;3744:34::-;3736:109;;;;-1:-1:-1;;;3736:109:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3855:8;:6;:8::i;4325:136:10:-;4398:7;4424:12;;;:6;:12;;;;;:30;;4448:5;4424:23;:30::i;3310:137::-;3379:4;3402:12;;;:6;:12;;;;;:38;;3432:7;3402:29;:38::i;5234:94:25:-;5314:7;5307:14;;;;;;;;-1:-1:-1;;5307:14:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5282:13;;5307:14;;5314:7;;5307:14;;5314:7;5307:14;;;;;;;;;;;;;;;;;;;;;;;;2087:49:10;2132:4;2087:49;:::o;7963:290:25:-;8077:12;:10;:12::i;:::-;-1:-1:-1;;;;;8065:24:25;:8;-1:-1:-1;;;;;8065:24:25;;;8057:62;;;;;-1:-1:-1;;;8057:62:25;;;;;;;;;;;;-1:-1:-1;;;8057:62:25;;;;;;;;;;;;;;;8175:8;8130:18;:32;8149:12;:10;:12::i;:::-;-1:-1:-1;;;;;8130:32:25;;;;;;;;;;;;;;;;;-1:-1:-1;8130:32:25;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;8130:53:25;;;;;;;;;;;8213:12;:10;:12::i;:::-;-1:-1:-1;;;;;8198:48:25;;8237:8;8198:48;;;;;;;;;;;;;;;;;;;;7963:290;;:::o;1168:189:15:-;1426:13:16;;;;;;;;:33;;;1443:16;:14;:16::i;:::-;1426:50;;;-1:-1:-1;1464:12:16;;;;1463:13;1426:50;1418:109;;;;-1:-1:-1;;;1418:109:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1538:19;1561:13;;;;;;1560:14;1584:98;;;;1618:13;:20;;-1:-1:-1;;;;1618:20:16;;;;;1652:19;1634:4;1652:19;;;1584:98;1290:60:15::1;1328:4;1334:6;1342:7;1290:37;:60::i;:::-;1708:14:16::0;1704:66;;;1754:5;1738:21;;-1:-1:-1;;1738:21:16;;;1704:66;1168:189:15;;;;:::o;9116:282:25:-;9247:41;9266:12;:10;:12::i;:::-;9280:7;9247:18;:41::i;:::-;9239:103;;;;-1:-1:-1;;;9239:103:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9352:39;9366:4;9372:2;9376:7;9385:5;9352:13;:39::i;5394:740::-;5459:13;5492:16;5500:7;5492;:16::i;:::-;5484:76;;;;-1:-1:-1;;;5484:76:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5597:19;;;;:10;:19;;;;;;;;;5571:45;;;;;;-1:-1:-1;;5571:45:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;:45;;;5597:19;5571:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5695:8:25;5689:22;5571:45;;-1:-1:-1;;;;5689:22:25;-1:-1:-1;;5689:22:25;;;;;;;;;;;5685:74;;5739:9;-1:-1:-1;5732:16:25;;5685:74;5861:23;;:27;5857:110;;5935:8;5945:9;5918:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5918:37:25;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5918:37:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5904:52;;;;;5857:110;6097:8;6107:18;:7;:16;:18::i;:::-;6080:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6080:46:25;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6080:46:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6066:61;;;5394:740;;;:::o;3615:125:10:-;3678:7;3704:12;;;:6;:12;;;;;:29;;:27;:29::i;1426:62:15:-;-1:-1:-1;;;;;;;;;;;1426:62:15;:::o;5461:226:10:-;5553:12;;;;:6;:12;;;;;:22;;;5545:45;;5577:12;:10;:12::i;5545:45::-;5537:106;;;;-1:-1:-1;;;5537:106:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1494:62:15;-1:-1:-1;;;;;;;;;;;1494:62:15;:::o;8319:154:25:-;-1:-1:-1;;;;;8431:25:25;;;8408:4;8431:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;8319:154::o;10832:117::-;10889:4;10912:30;:12;10934:7;10912:21;:30::i;820:104:9:-;907:10;820:104;:::o;16499:155:25:-;16564:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;16564:29:25;-1:-1:-1;;;;;16564:29:25;;;;;;;;:24;;16617:16;16564:24;16617:7;:16::i;:::-;-1:-1:-1;;;;;16608:39:25;;;;;;;;;;;16499:155;;:::o;7034:121:32:-;7103:7;7129:19;7137:3;7129:7;:19::i;11107:329:25:-;11192:4;11216:16;11224:7;11216;:16::i;:::-;11208:73;;;;-1:-1:-1;;;11208:73:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11291:13;11307:16;11315:7;11307;:16::i;:::-;11291:32;;11352:5;-1:-1:-1;;;;;11341:16:25;:7;-1:-1:-1;;;;;11341:16:25;;:51;;;;11385:7;-1:-1:-1;;;;;11361:31:25;:20;11373:7;11361:11;:20::i;:::-;-1:-1:-1;;;;;11361:31:25;;11341:51;:87;;;;11396:32;11413:5;11420:7;11396:16;:32::i;:::-;11333:96;11107:329;-1:-1:-1;;;;11107:329:25:o;14101:559::-;14218:4;-1:-1:-1;;;;;14198:24:25;:16;14206:7;14198;:16::i;:::-;-1:-1:-1;;;;;14198:24:25;;14190:78;;;;-1:-1:-1;;;14190:78:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14286:16:25;;14278:65;;;;-1:-1:-1;;;14278:65:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14354:39;14375:4;14381:2;14385:7;14354:20;:39::i;:::-;14455:29;14472:1;14476:7;14455:8;:29::i;:::-;-1:-1:-1;;;;;14495:19:25;;;;;;:13;:19;;;;;:35;;14522:7;14495:26;:35::i;:::-;-1:-1:-1;;;;;;14540:17:25;;;;;;:13;:17;;;;;:30;;14562:7;14540:21;:30::i;:::-;-1:-1:-1;14581:29:25;:12;14598:7;14607:2;14581:16;:29::i;:::-;;14645:7;14641:2;-1:-1:-1;;;;;14626:27:25;14635:4;-1:-1:-1;;;;;14626:27:25;-1:-1:-1;;;;;;;;;;;14626:27:25;;;;;;;;;14101:559;;;:::o;7385:184:10:-;7458:12;;;;:6;:12;;;;;:33;;7483:7;7458:24;:33::i;:::-;7454:109;;;7539:12;:10;:12::i;:::-;-1:-1:-1;;;;;7512:40:10;7530:7;-1:-1:-1;;;;;7512:40:10;7524:4;7512:40;;;;;;;;;;7385:184;;:::o;7660:135:33:-;7731:7;7765:22;7769:3;7781:5;7765:3;:22::i;7575:188:10:-;7649:12;;;;:6;:12;;;;;:36;;7677:7;7649:27;:36::i;:::-;7645:112;;;7733:12;:10;:12::i;:::-;-1:-1:-1;;;;;7706:40:10;7724:7;-1:-1:-1;;;;;7706:40:10;7718:4;7706:40;;;;;;;;;;7575:188;;:::o;2295:117:34:-;1863:7;;;;1855:40;;;;;-1:-1:-1;;;1855:40:34;;;;;;;;;;;;-1:-1:-1;;;1855:40:34;;;;;;;;;;;;;;;2353:7:::1;:15:::0;;-1:-1:-1;;2353:15:34::1;::::0;;2383:22:::1;2392:12;:10;:12::i;:::-;2383:22;::::0;;-1:-1:-1;;;;;2383:22:34;;::::1;::::0;;;;;;;::::1;::::0;;::::1;2295:117::o:0;13275:502:25:-;13334:13;13350:16;13358:7;13350;:16::i;:::-;13334:32;;13377:48;13398:5;13413:1;13417:7;13377:20;:48::i;:::-;13463:29;13480:1;13484:7;13463:8;:29::i;:::-;13548:19;;;;:10;:19;;;;;13542:33;;-1:-1:-1;;13542:33:25;;;;;;;;;;;:38;13538:95;;13603:19;;;;:10;:19;;;;;13596:26;;;:::i;:::-;-1:-1:-1;;;;;13643:20:25;;;;;;:13;:20;;;;;:36;;13671:7;13643:27;:36::i;:::-;-1:-1:-1;13690:28:25;:12;13710:7;13690:19;:28::i;:::-;-1:-1:-1;13734:36:25;;13762:7;;13758:1;;-1:-1:-1;;;;;13734:36:25;;;-1:-1:-1;;;;;;;;;;;13734:36:25;13758:1;;13734:36;13275:502;;:::o;7483:224:32:-;7563:7;;;;7622:22;7626:3;7638:5;7622:3;:22::i;:::-;7591:53;;;;-1:-1:-1;7483:224:32;-1:-1:-1;;;;;7483:224:32:o;8126:202::-;8233:7;8275:44;8280:3;8300;8306:12;8275:4;:44::i;:::-;8267:53;-1:-1:-1;8126:202:32;;;;;;:::o;1131:112:31:-;1222:14;;1131:112::o;12665:393:25:-;-1:-1:-1;;;;;12744:16:25;;12736:61;;;;;-1:-1:-1;;;12736:61:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12816:16;12824:7;12816;:16::i;:::-;12815:17;12807:58;;;;;-1:-1:-1;;;12807:58:25;;;;;;;;;;;;-1:-1:-1;;;12807:58:25;;;;;;;;;;;;;;;12876:45;12905:1;12909:2;12913:7;12876:20;:45::i;:::-;-1:-1:-1;;;;;12932:17:25;;;;;;:13;:17;;;;;:30;;12954:7;12932:21;:30::i;:::-;-1:-1:-1;12973:29:25;:12;12990:7;12999:2;12973:16;:29::i;:::-;-1:-1:-1;13018:33:25;;13043:7;;-1:-1:-1;;;;;13018:33:25;;;13035:1;;-1:-1:-1;;;;;;;;;;;13018:33:25;13035:1;;13018:33;12665:393;;:::o;1249:178:31:-;1401:19;;1419:1;1401:19;;;1249:178::o;2048:115:34:-;1599:7;;;;1598:8;1590:37;;;;;-1:-1:-1;;;1590:37:34;;;;;;;;;;;;-1:-1:-1;;;1590:37:34;;;;;;;;;;;;;;;2107:7:::1;:14:::0;;-1:-1:-1;;2107:14:34::1;2117:4;2107:14;::::0;;2136:20:::1;2143:12;:10;:12::i;5412:156:33:-:0;5492:4;5515:46;5525:3;-1:-1:-1;;;;;5545:14:33;;5515:9;:46::i;1866:593:16:-;2302:4;2410:17;2445:7;1866:593;:::o;1876:503:15:-;1426:13:16;;;;;;;;:33;;;1443:16;:14;:16::i;:::-;1426:50;;;-1:-1:-1;1464:12:16;;;;1463:13;1426:50;1418:109;;;;-1:-1:-1;;;1418:109:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1538:19;1561:13;;;;;;1560:14;1584:98;;;;1618:13;:20;;-1:-1:-1;;;;1618:20:16;;;;;1652:19;1634:4;1652:19;;;1584:98;2019:26:15::1;:24;:26::i;:::-;2055:32;:30;:32::i;:::-;2097:25;:23;:25::i;:::-;2132:37;2156:4;2162:6;2132:23;:37::i;:::-;2179:33;:31;:33::i;:::-;2222:27;:25;:27::i;:::-;2259:33;:31;:33::i;:::-;2302:70;2350:4;2356:6;2364:7;2302:47;:70::i;10260:269:25:-:0;10373:28;10383:4;10389:2;10393:7;10373:9;:28::i;:::-;10419:48;10442:4;10448:2;10452:7;10461:5;10419:22;:48::i;:::-;10411:111;;;;-1:-1:-1;;;10411:111:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;213:723:35;269:13;486:10;482:51;;-1:-1:-1;512:10:35;;;;;;;;;;;;-1:-1:-1;;;512:10:35;;;;;;482:51;557:5;542:12;596:75;603:9;;596:75;;628:8;;658:2;650:10;;;;596:75;;;680:19;712:6;-1:-1:-1;;;;;702:17:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;702:17:35;-1:-1:-1;772:5:35;;-1:-1:-1;680:39:35;-1:-1:-1;;;745:10:35;;787:112;794:9;;787:112;;860:2;853:4;:9;848:2;:14;837:27;;819:6;826:7;;;;;;;819:15;;;;;;;;;;;:45;-1:-1:-1;;;;;819:45:35;;;;;;;;-1:-1:-1;886:2:35;878:10;;;;787:112;;;-1:-1:-1;922:6:35;213:723;-1:-1:-1;;;;213:723:35:o;6802:149:32:-;6886:4;6909:35;6919:3;6939;6909:9;:35::i;4266:207:15:-;4421:45;4448:4;4454:2;4458:7;4421:26;:45::i;6775:135:33:-;6845:4;6868:35;6876:3;6896:5;6868:7;:35::i;6478:129::-;6545:4;6568:32;6573:3;6593:5;6568:4;:32::i;6250:174:32:-;6339:4;6362:55;6367:3;6387;-1:-1:-1;;;;;6401:14:32;;6362:4;:55::i;4875:141:33:-;4945:4;4968:41;4973:3;-1:-1:-1;;;;;4993:14:33;;4968:4;:41::i;4434:201::-;4528:18;;4501:7;;4528:26;-1:-1:-1;4520:73:33;;;;-1:-1:-1;;;4520:73:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4610:3;:11;;4622:5;4610:18;;;;;;;;;;;;;;;;4603:25;;4434:201;;;;:::o;5184:147::-;5257:4;5280:44;5288:3;-1:-1:-1;;;;;5308:14:33;;5280:7;:44::i;6583:140:32:-;6660:4;6683:33;6691:3;6711;6683:7;:33::i;4945:274::-;5048:19;;5012:7;;;;5048:27;-1:-1:-1;5040:74:32;;;;-1:-1:-1;;;5040:74:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5125:22;5150:3;:12;;5163:5;5150:19;;;;;;;;;;;;;;;;;;5125:44;;5187:5;:10;;;5199:5;:12;;;5179:33;;;;;4945:274;;;;;:::o;5626:315::-;5720:7;5758:17;;;:12;;;:17;;;;;;5808:12;5793:13;5785:36;;;;-1:-1:-1;;;5785:36:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5874:3;:12;;5898:1;5887:8;:12;5874:26;;;;;;;;;;;;;;;;;;:33;;;5867:40;;;5626:315;;;;;:::o;3787:127:33:-;3860:4;3883:19;;;:12;;;;;:19;;;;;;:24;;;3787:127::o;751:64:9:-;1426:13:16;;;;;;;;:33;;;1443:16;:14;:16::i;:::-;1426:50;;;-1:-1:-1;1464:12:16;;;;1463:13;1426:50;1418:109;;;;-1:-1:-1;;;1418:109:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1538:19;1561:13;;;;;;1560:14;1584:98;;;;1618:13;:20;;-1:-1:-1;;;;1618:20:16;;;;;1652:19;1634:4;1652:19;;;1584:98;1708:14;1704:66;;;1754:5;1738:21;;-1:-1:-1;;1738:21:16;;;751:64:9;:::o;760:249:11:-;1426:13:16;;;;;;;;:33;;;1443:16;:14;:16::i;:::-;1426:50;;;-1:-1:-1;1464:12:16;;;;1463:13;1426:50;1418:109;;;;-1:-1:-1;;;1418:109:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1538:19;1561:13;;;;;;1560:14;1584:98;;;;1618:13;:20;;-1:-1:-1;;;;1618:20:16;;;;;1652:19;1634:4;1652:19;;;1584:98;962:40:11::1;-1:-1:-1::0;;;962:18:11::1;:40::i;4125:399:25:-:0;1426:13:16;;;;;;;;:33;;;1443:16;:14;:16::i;:::-;1426:50;;;-1:-1:-1;1464:12:16;;;;1463:13;1426:50;1418:109;;;;-1:-1:-1;;;1418:109:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1538:19;1561:13;;;;;;1560:14;1584:98;;;;1618:13;:20;;-1:-1:-1;;;;1618:20:16;;;;;1652:19;1634:4;1652:19;;;1584:98;4231:12:25;;::::1;::::0;:5:::1;::::0;:12:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;4253:16:25;;::::1;::::0;:7:::1;::::0;:16:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;4357:40:25::1;-1:-1:-1::0;;;4357:18:25::1;:40::i;:::-;4407:49;-1:-1:-1::0;;;4407:18:25::1;:49::i;:::-;4466:51;-1:-1:-1::0;;;4466:18:25::1;:51::i;:::-;1708:14:16::0;1704:66;;;1754:5;1738:21;;-1:-1:-1;;1738:21:16;;;4125:399:25;;;:::o;1108:90:34:-;1426:13:16;;;;;;;;:33;;;1443:16;:14;:16::i;:::-;1426:50;;;-1:-1:-1;1464:12:16;;;;1463:13;1426:50;1418:109;;;;-1:-1:-1;;;1418:109:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1538:19;1561:13;;;;;;1560:14;1584:98;;;;1618:13;:20;;-1:-1:-1;;;;1618:20:16;;;;;1652:19;1634:4;1652:19;;;1584:98;1176:7:34::1;:15:::0;;-1:-1:-1;;1176:15:34::1;::::0;;1704:66:16;;;;1754:5;1738:21;;-1:-1:-1;;1738:21:16;;;1108:90:34;:::o;2385:330:15:-;1426:13:16;;;;;;;;:33;;;1443:16;:14;:16::i;:::-;1426:50;;;-1:-1:-1;1464:12:16;;;;1463:13;1426:50;1418:109;;;;-1:-1:-1;;;1418:109:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1538:19;1561:13;;;;;;1560:14;1584:98;;;;1618:13;:20;;-1:-1:-1;;;;1618:20:16;;;;;1652:19;1634:4;1652:19;;;1584:98;2538:44:15::1;2132:4:10;2569:12:15;:10;:12::i;:::-;2538:10;:44::i;:::-;2593:37;-1:-1:-1::0;;;;;;;;;;;2617:12:15::1;:10;:12::i;2593:37::-;2640;-1:-1:-1::0;;;;;;;;;;;2664:12:15::1;:10;:12::i;2640:37::-;2688:20;2700:7;2688:11;:20::i;15893:600:25:-:0;16013:4;16038:15;:2;-1:-1:-1;;;;;16038:13:25;;:15::i;:::-;16033:58;;-1:-1:-1;16076:4:25;16069:11;;16033:58;16100:23;16126:257;-1:-1:-1;;;16248:12:25;:10;:12::i;:::-;16274:4;16292:7;16313:5;16142:186;;;;;;-1:-1:-1;;;;;16142:186:25;;;;;;-1:-1:-1;;;;;16142:186:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16142:186:25;;;;;;;-1:-1:-1;;;;;16142:186:25;;;;;;;;;;;16126:257;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;16126:15:25;;;:257;:15;:257::i;:::-;16100:283;;16393:13;16420:10;16409:32;;;;;;;;;;;;;;;-1:-1:-1;16409:32:25;-1:-1:-1;;;;;;16459:26:25;-1:-1:-1;;;16459:26:25;;-1:-1:-1;;;15893:600:25;;;;;;:::o;991:237:24:-;1100:45;1127:4;1133:2;1137:7;1100:26;:45::i;:::-;1165:8;:6;:8::i;:::-;1164:9;1156:65;;;;-1:-1:-1;;;1156:65:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2194:1512:33;2260:4;2397:19;;;:12;;;:19;;;;;;2431:15;;2427:1273;;2860:18;;-1:-1:-1;;2812:14:33;;;;2860:22;;;;2788:21;;2860:3;;:22;;3142;;;;;;;;;;;;;;3122:42;;3285:9;3256:3;:11;;3268:13;3256:26;;;;;;;;;;;;;;;;;;;:38;;;;3360:23;;;3402:1;3360:12;;;:23;;;;;;3386:17;;;3360:43;;3509:17;;3360:3;;3509:17;;;;;;;;;;;;;;;;;;;;;;3601:3;:12;;:19;3614:5;3601:19;;;;;;;;;;;3594:26;;;3642:4;3635:11;;;;;;;;2427:1273;3684:5;3677:12;;;;;1622:404;1685:4;1706:21;1716:3;1721:5;1706:9;:21::i;:::-;1701:319;;-1:-1:-1;1743:23:33;;;;;;;;:11;:23;;;;;;;;;;;;;1923:18;;1901:19;;;:12;;;:19;;;;;;:40;;;;1955:11;;1701:319;-1:-1:-1;2004:5:33;1997:12;;1839:678:32;1915:4;2048:17;;;:12;;;:17;;;;;;2080:13;2076:435;;-1:-1:-1;;2164:38:32;;;;;;;;;;;;;;;;;;2146:57;;;;;;;;:12;:57;;;;;;;;;;;;;;;;;;;;;;;;2358:19;;2338:17;;;:12;;;:17;;;;;;;:39;2391:11;;2076:435;2469:5;2433:3;:12;;2457:1;2446:8;:12;2433:26;;;;;;;;;;;;;;;;;;:33;;:41;;;;2495:5;2488:12;;;;;2685:1517;2749:4;2882:17;;;:12;;;:17;;;;;;2914:13;;2910:1286;;3340:19;;-1:-1:-1;;3294:12:32;;;;3340:23;;;;3270:21;;3340:3;;:23;;3632;;;;;;;;;;;;;;;;3603:52;;3777:9;3747:3;:12;;3760:13;3747:27;;;;;;;;;;;;;;;;:39;;:27;;;;;:39;;;;;;;;;;;;;;;3865:14;;3852:28;;:12;;;:28;;;;;3883:17;;;3852:48;;4006:18;;3852:3;;4006:18;;;;;;;;;;;;;;-1:-1:-1;;4006:18:32;;;;;;;;;;;;;;;;;;;;;4099:17;;;:12;;;:17;;;;;;4092:24;;;;4006:18;-1:-1:-1;4131:11:32;;-1:-1:-1;;;;4131:11:32;1693:198:11;-1:-1:-1;;;;;;1776:25:11;;;;;1768:66;;;;;-1:-1:-1;;;1768:66:11;;;;;;;;;;;;-1:-1:-1;;;1768:66:11;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1844:33:11;;;;;:20;:33;;;;;:40;;-1:-1:-1;;1844:40:11;1880:4;1844:40;;;1693:198::o;15242:98:25:-;15314:19;;;;:8;;:19;;;;;:::i;729:413:30:-;1089:20;1127:8;;;729:413::o;3584:194::-;3687:12;3718:53;3741:6;3749:4;3755:1;3758:12;5061;5093:18;5104:6;5093:10;:18::i;:::-;5085:60;;;;;-1:-1:-1;;;5085:60:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;5216:12;5230:23;5257:6;-1:-1:-1;;;;;5257:11:30;5277:8;5288:4;5257:36;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5257:36:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5215:78;;;;5307:7;5303:580;;;5337:10;-1:-1:-1;5330:17:30;;-1:-1:-1;5330:17:30;5303:580;5448:17;;:21;5444:429;;5706:10;5700:17;5766:15;5753:10;5749:2;5745:19;5738:44;5655:145;5838:20;;-1:-1:-1;;;5838:20:30;;;;;;;;;;;;;;;;;5845:12;;5838:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.6.0;\n\nimport \"../access/AccessControlUpgradeable.sol\";\nimport \"../GSN/ContextUpgradeable.sol\";\nimport \"../utils/CountersUpgradeable.sol\";\nimport \"../token/ERC721/ERC721Upgradeable.sol\";\nimport \"../token/ERC721/ERC721BurnableUpgradeable.sol\";\nimport \"../token/ERC721/ERC721PausableUpgradeable.sol\";\nimport \"../proxy/Initializable.sol\";\n\n/**\n * @dev {ERC721} token, including:\n *\n *  - ability for holders to burn (destroy) their tokens\n *  - a minter role that allows for token minting (creation)\n *  - a pauser role that allows to stop all token transfers\n *  - token ID and URI autogeneration\n *\n * This contract uses {AccessControl} to lock permissioned functions using the\n * different roles - head to its documentation for details.\n *\n * The account that deploys the contract will be granted the minter and pauser\n * roles, as well as the default admin role, which will let it grant both minter\n * and pauser roles to other accounts.\n */\ncontract ERC721PresetMinterPauserAutoIdUpgradeable is Initializable, ContextUpgradeable, AccessControlUpgradeable, ERC721BurnableUpgradeable, ERC721PausableUpgradeable {\n    function initialize(string memory name, string memory symbol, string memory baseURI) public virtual initializer {\n        __ERC721PresetMinterPauserAutoId_init(name, symbol, baseURI);\n    }\n    using CountersUpgradeable for CountersUpgradeable.Counter;\n\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n\n    CountersUpgradeable.Counter private _tokenIdTracker;\n\n    /**\n     * @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n     * account that deploys the contract.\n     *\n     * Token URIs will be autogenerated based on `baseURI` and their token IDs.\n     * See {ERC721-tokenURI}.\n     */\n    function __ERC721PresetMinterPauserAutoId_init(string memory name, string memory symbol, string memory baseURI) internal initializer {\n        __Context_init_unchained();\n        __AccessControl_init_unchained();\n        __ERC165_init_unchained();\n        __ERC721_init_unchained(name, symbol);\n        __ERC721Burnable_init_unchained();\n        __Pausable_init_unchained();\n        __ERC721Pausable_init_unchained();\n        __ERC721PresetMinterPauserAutoId_init_unchained(name, symbol, baseURI);\n    }\n\n    function __ERC721PresetMinterPauserAutoId_init_unchained(string memory name, string memory symbol, string memory baseURI) internal initializer {\n        _setupRole(DEFAULT_ADMIN_ROLE, _msgSender());\n\n        _setupRole(MINTER_ROLE, _msgSender());\n        _setupRole(PAUSER_ROLE, _msgSender());\n\n        _setBaseURI(baseURI);\n    }\n\n    /**\n     * @dev Creates a new token for `to`. Its token ID will be automatically\n     * assigned (and available on the emitted {IERC721-Transfer} event), and the token\n     * URI autogenerated based on the base URI passed at construction.\n     *\n     * See {ERC721-_mint}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `MINTER_ROLE`.\n     */\n    function mint(address to) public virtual {\n        require(hasRole(MINTER_ROLE, _msgSender()), \"ERC721PresetMinterPauserAutoId: must have minter role to mint\");\n\n        // We cannot just use balanceOf to create the new tokenId because tokens\n        // can be burned (destroyed), so we need a separate counter.\n        _mint(to, _tokenIdTracker.current());\n        _tokenIdTracker.increment();\n    }\n\n    /**\n     * @dev Pauses all token transfers.\n     *\n     * See {ERC721Pausable} and {Pausable-_pause}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `PAUSER_ROLE`.\n     */\n    function pause() public virtual {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\");\n        _pause();\n    }\n\n    /**\n     * @dev Unpauses all token transfers.\n     *\n     * See {ERC721Pausable} and {Pausable-_unpause}.\n     *\n     * Requirements:\n     *\n     * - the caller must have the `PAUSER_ROLE`.\n     */\n    function unpause() public virtual {\n        require(hasRole(PAUSER_ROLE, _msgSender()), \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\");\n        _unpause();\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual override(ERC721Upgradeable, ERC721PausableUpgradeable) {\n        super._beforeTokenTransfer(from, to, tokenId);\n    }\n    uint256[49] private __gap;\n}\n",
  "sourcePath": "@openzeppelin/contracts-upgradeable/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol",
  "ast": {
    "absolutePath": "@openzeppelin/contracts-upgradeable/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol",
    "exportedSymbols": {
      "ERC721PresetMinterPauserAutoIdUpgradeable": [
        3583
      ]
    },
    "id": 3584,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3368,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:15"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "file": "../access/AccessControlUpgradeable.sol",
        "id": 3369,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 2851,
        "src": "58:48:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol",
        "file": "../GSN/ContextUpgradeable.sol",
        "id": 3370,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 2543,
        "src": "107:39:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol",
        "file": "../utils/CountersUpgradeable.sol",
        "id": 3371,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 6581,
        "src": "147:42:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
        "file": "../token/ERC721/ERC721Upgradeable.sol",
        "id": 3372,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 6144,
        "src": "190:47:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721BurnableUpgradeable.sol",
        "file": "../token/ERC721/ERC721BurnableUpgradeable.sol",
        "id": 3373,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 5115,
        "src": "238:55:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721PausableUpgradeable.sol",
        "file": "../token/ERC721/ERC721PausableUpgradeable.sol",
        "id": 3374,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 5183,
        "src": "294:55:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol",
        "file": "../proxy/Initializable.sol",
        "id": 3375,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 3655,
        "src": "350:36:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3377,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3654,
              "src": "1048:13:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$3654",
                "typeString": "contract Initializable"
              }
            },
            "id": 3378,
            "nodeType": "InheritanceSpecifier",
            "src": "1048:13:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3379,
              "name": "ContextUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2542,
              "src": "1063:18:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContextUpgradeable_$2542",
                "typeString": "contract ContextUpgradeable"
              }
            },
            "id": 3380,
            "nodeType": "InheritanceSpecifier",
            "src": "1063:18:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3381,
              "name": "AccessControlUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2850,
              "src": "1083:24:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControlUpgradeable_$2850",
                "typeString": "contract AccessControlUpgradeable"
              }
            },
            "id": 3382,
            "nodeType": "InheritanceSpecifier",
            "src": "1083:24:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3383,
              "name": "ERC721BurnableUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5114,
              "src": "1109:25:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721BurnableUpgradeable_$5114",
                "typeString": "contract ERC721BurnableUpgradeable"
              }
            },
            "id": 3384,
            "nodeType": "InheritanceSpecifier",
            "src": "1109:25:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3385,
              "name": "ERC721PausableUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5182,
              "src": "1136:25:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721PausableUpgradeable_$5182",
                "typeString": "contract ERC721PausableUpgradeable"
              }
            },
            "id": 3386,
            "nodeType": "InheritanceSpecifier",
            "src": "1136:25:15"
          }
        ],
        "contractDependencies": [
          2542,
          2850,
          2925,
          2937,
          3654,
          5114,
          5182,
          6143,
          6174,
          6201,
          6335,
          7541
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3376,
          "nodeType": "StructuredDocumentation",
          "src": "388:605:15",
          "text": " @dev {ERC721} token, including:\n  - ability for holders to burn (destroy) their tokens\n  - a minter role that allows for token minting (creation)\n  - a pauser role that allows to stop all token transfers\n  - token ID and URI autogeneration\n This contract uses {AccessControl} to lock permissioned functions using the\n different roles - head to its documentation for details.\n The account that deploys the contract will be granted the minter and pauser\n roles, as well as the default admin role, which will let it grant both minter\n and pauser roles to other accounts."
        },
        "fullyImplemented": true,
        "id": 3583,
        "linearizedBaseContracts": [
          3583,
          5182,
          7541,
          5114,
          6143,
          6174,
          6201,
          6335,
          2925,
          2937,
          2850,
          2542,
          3654
        ],
        "name": "ERC721PresetMinterPauserAutoIdUpgradeable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3403,
              "nodeType": "Block",
              "src": "1280:77:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3398,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3388,
                        "src": "1328:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3399,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3390,
                        "src": "1334:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3400,
                        "name": "baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3392,
                        "src": "1342:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3397,
                      "name": "__ERC721PresetMinterPauserAutoId_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3461,
                      "src": "1290:37:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory)"
                      }
                    },
                    "id": 3401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1290:60:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3402,
                  "nodeType": "ExpressionStatement",
                  "src": "1290:60:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a6487c53",
            "id": 3404,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3395,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3394,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3631,
                  "src": "1268:11:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1268:11:15"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3388,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3404,
                  "src": "1188:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3387,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3390,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3404,
                  "src": "1208:20:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3389,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1208:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3392,
                  "mutability": "mutable",
                  "name": "baseURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3404,
                  "src": "1230:21:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3391,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1230:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1187:65:15"
            },
            "returnParameters": {
              "id": 3396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1280:0:15"
            },
            "scope": 3583,
            "src": "1168:189:15",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 3407,
            "libraryName": {
              "contractScope": null,
              "id": 3405,
              "name": "CountersUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6580,
              "src": "1368:19:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CountersUpgradeable_$6580",
                "typeString": "library CountersUpgradeable"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1362:58:15",
            "typeName": {
              "contractScope": null,
              "id": 3406,
              "name": "CountersUpgradeable.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6540,
              "src": "1392:27:15",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$6540_storage_ptr",
                "typeString": "struct CountersUpgradeable.Counter"
              }
            }
          },
          {
            "constant": true,
            "functionSelector": "d5391393",
            "id": 3412,
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3583,
            "src": "1426:62:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3408,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1426:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 3410,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1474:13:15",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 3409,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1464:9:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 3411,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1464:24:15",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "e63ab1e9",
            "id": 3417,
            "mutability": "constant",
            "name": "PAUSER_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3583,
            "src": "1494:62:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3413,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1494:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "5041555345525f524f4c45",
                  "id": 3415,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1542:13:15",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  },
                  "value": "PAUSER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  }
                ],
                "id": 3414,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1532:9:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 3416,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1532:24:15",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3419,
            "mutability": "mutable",
            "name": "_tokenIdTracker",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3583,
            "src": "1563:51:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$6540_storage",
              "typeString": "struct CountersUpgradeable.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 3418,
              "name": "CountersUpgradeable.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6540,
              "src": "1563:27:15",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$6540_storage_ptr",
                "typeString": "struct CountersUpgradeable.Counter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3460,
              "nodeType": "Block",
              "src": "2009:370:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3431,
                      "name": "__Context_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2517,
                      "src": "2019:24:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2019:26:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3433,
                  "nodeType": "ExpressionStatement",
                  "src": "2019:26:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3434,
                      "name": "__AccessControl_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2571,
                      "src": "2055:30:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2055:32:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3436,
                  "nodeType": "ExpressionStatement",
                  "src": "2055:32:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3437,
                      "name": "__ERC165_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2886,
                      "src": "2097:23:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2097:25:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3439,
                  "nodeType": "ExpressionStatement",
                  "src": "2097:25:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3441,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3422,
                        "src": "2156:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3442,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3424,
                        "src": "2162:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3440,
                      "name": "__ERC721_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5314,
                      "src": "2132:23:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 3443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2132:37:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3444,
                  "nodeType": "ExpressionStatement",
                  "src": "2132:37:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3445,
                      "name": "__ERC721Burnable_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5089,
                      "src": "2179:31:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2179:33:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3447,
                  "nodeType": "ExpressionStatement",
                  "src": "2179:33:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3448,
                      "name": "__Pausable_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7474,
                      "src": "2222:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2222:27:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3450,
                  "nodeType": "ExpressionStatement",
                  "src": "2222:27:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3451,
                      "name": "__ERC721Pausable_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5150,
                      "src": "2259:31:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2259:33:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3453,
                  "nodeType": "ExpressionStatement",
                  "src": "2259:33:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3455,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3422,
                        "src": "2350:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3456,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3424,
                        "src": "2356:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3457,
                        "name": "baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3426,
                        "src": "2364:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3454,
                      "name": "__ERC721PresetMinterPauserAutoId_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3495,
                      "src": "2302:47:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory)"
                      }
                    },
                    "id": 3458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2302:70:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3459,
                  "nodeType": "ExpressionStatement",
                  "src": "2302:70:15"
                }
              ]
            },
            "documentation": {
              "id": 3420,
              "nodeType": "StructuredDocumentation",
              "src": "1621:250:15",
              "text": " @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n account that deploys the contract.\n Token URIs will be autogenerated based on `baseURI` and their token IDs.\n See {ERC721-tokenURI}."
            },
            "id": 3461,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3429,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3428,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3631,
                  "src": "1997:11:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1997:11:15"
              }
            ],
            "name": "__ERC721PresetMinterPauserAutoId_init",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3422,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3461,
                  "src": "1923:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3421,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1923:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3424,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3461,
                  "src": "1943:20:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3423,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1943:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3426,
                  "mutability": "mutable",
                  "name": "baseURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3461,
                  "src": "1965:21:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3425,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1965:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1922:65:15"
            },
            "returnParameters": {
              "id": 3430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2009:0:15"
            },
            "scope": 3583,
            "src": "1876:503:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3494,
              "nodeType": "Block",
              "src": "2528:187:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3473,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2589,
                        "src": "2549:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3474,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2526,
                          "src": "2569:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 3475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2569:12:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 3472,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2772,
                      "src": "2538:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 3476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2538:44:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3477,
                  "nodeType": "ExpressionStatement",
                  "src": "2538:44:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3479,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3412,
                        "src": "2604:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3480,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2526,
                          "src": "2617:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 3481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2617:12:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 3478,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2772,
                      "src": "2593:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 3482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2593:37:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3483,
                  "nodeType": "ExpressionStatement",
                  "src": "2593:37:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3485,
                        "name": "PAUSER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3417,
                        "src": "2651:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3486,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2526,
                          "src": "2664:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 3487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2664:12:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 3484,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2772,
                      "src": "2640:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 3488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2640:37:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3489,
                  "nodeType": "ExpressionStatement",
                  "src": "2640:37:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3491,
                        "name": "baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3467,
                        "src": "2700:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3490,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6047,
                      "src": "2688:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2688:20:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3493,
                  "nodeType": "ExpressionStatement",
                  "src": "2688:20:15"
                }
              ]
            },
            "documentation": null,
            "id": 3495,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3470,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3469,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3631,
                  "src": "2516:11:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2516:11:15"
              }
            ],
            "name": "__ERC721PresetMinterPauserAutoId_init_unchained",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3463,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3495,
                  "src": "2442:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3462,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2442:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3465,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3495,
                  "src": "2462:20:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3464,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2462:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3467,
                  "mutability": "mutable",
                  "name": "baseURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3495,
                  "src": "2484:21:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3466,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2484:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2441:65:15"
            },
            "returnParameters": {
              "id": 3471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2528:0:15"
            },
            "scope": 3583,
            "src": "2385:330:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3522,
              "nodeType": "Block",
              "src": "3131:359:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3503,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3412,
                            "src": "3157:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3504,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2526,
                              "src": "3170:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 3505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3170:12:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 3502,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "3149:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 3506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3149:34:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
                        "id": 3507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3185:63:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea198f3e8a5129d820e5e0bb8ade0f42a56b75e06362ce80ffa86409143aedbb",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have minter role to mint\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have minter role to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea198f3e8a5129d820e5e0bb8ade0f42a56b75e06362ce80ffa86409143aedbb",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have minter role to mint\""
                        }
                      ],
                      "id": 3501,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3141:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3141:108:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3509,
                  "nodeType": "ExpressionStatement",
                  "src": "3141:108:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3511,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3498,
                        "src": "3416:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3512,
                            "name": "_tokenIdTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3419,
                            "src": "3420:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$6540_storage",
                              "typeString": "struct CountersUpgradeable.Counter storage ref"
                            }
                          },
                          "id": 3513,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6551,
                          "src": "3420:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$6540_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$6540_storage_ptr_$",
                            "typeString": "function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 3514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3420:25:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3510,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5875,
                      "src": "3410:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3410:36:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3516,
                  "nodeType": "ExpressionStatement",
                  "src": "3410:36:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3517,
                        "name": "_tokenIdTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3419,
                        "src": "3456:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$6540_storage",
                          "typeString": "struct CountersUpgradeable.Counter storage ref"
                        }
                      },
                      "id": 3519,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6563,
                      "src": "3456:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$6540_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$6540_storage_ptr_$",
                        "typeString": "function (struct CountersUpgradeable.Counter storage pointer)"
                      }
                    },
                    "id": 3520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3456:27:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3521,
                  "nodeType": "ExpressionStatement",
                  "src": "3456:27:15"
                }
              ]
            },
            "documentation": {
              "id": 3496,
              "nodeType": "StructuredDocumentation",
              "src": "2721:364:15",
              "text": " @dev Creates a new token for `to`. Its token ID will be automatically\n assigned (and available on the emitted {IERC721-Transfer} event), and the token\n URI autogenerated based on the base URI passed at construction.\n See {ERC721-_mint}.\n Requirements:\n - the caller must have the `MINTER_ROLE`."
            },
            "functionSelector": "6a627842",
            "id": 3523,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3498,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3523,
                  "src": "3104:10:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3497,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3104:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3103:12:15"
            },
            "returnParameters": {
              "id": 3500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3131:0:15"
            },
            "scope": 3583,
            "src": "3090:400:15",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3539,
              "nodeType": "Block",
              "src": "3726:144:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3529,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3417,
                            "src": "3752:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3530,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2526,
                              "src": "3765:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 3531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3765:12:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 3528,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "3744:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 3532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3744:34:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f207061757365",
                        "id": 3533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3780:64:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40c9c95e9f416c51c55d88e1508883bb887c746928503de15b750cf10a750aef",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have pauser role to pause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40c9c95e9f416c51c55d88e1508883bb887c746928503de15b750cf10a750aef",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\""
                        }
                      ],
                      "id": 3527,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3736:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3736:109:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3535,
                  "nodeType": "ExpressionStatement",
                  "src": "3736:109:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3536,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7520,
                      "src": "3855:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3855:8:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3538,
                  "nodeType": "ExpressionStatement",
                  "src": "3855:8:15"
                }
              ]
            },
            "documentation": {
              "id": 3524,
              "nodeType": "StructuredDocumentation",
              "src": "3496:193:15",
              "text": " @dev Pauses all token transfers.\n See {ERC721Pausable} and {Pausable-_pause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
            },
            "functionSelector": "8456cb59",
            "id": 3540,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3708:2:15"
            },
            "returnParameters": {
              "id": 3526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3726:0:15"
            },
            "scope": 3583,
            "src": "3694:176:15",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3556,
              "nodeType": "Block",
              "src": "4112:148:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3546,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3417,
                            "src": "4138:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3547,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2526,
                              "src": "4151:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 3548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4151:12:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 3545,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "4130:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 3549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4130:34:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f20756e7061757365",
                        "id": 3550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4166:66:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3877585dfb2235e1900eee5d9e32a457b9d6148f93823a62cb07ae76c6585a8",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have pauser role to unpause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3877585dfb2235e1900eee5d9e32a457b9d6148f93823a62cb07ae76c6585a8",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\""
                        }
                      ],
                      "id": 3544,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4122:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4122:111:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3552,
                  "nodeType": "ExpressionStatement",
                  "src": "4122:111:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3553,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7536,
                      "src": "4243:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4243:10:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3555,
                  "nodeType": "ExpressionStatement",
                  "src": "4243:10:15"
                }
              ]
            },
            "documentation": {
              "id": 3541,
              "nodeType": "StructuredDocumentation",
              "src": "3876:197:15",
              "text": " @dev Unpauses all token transfers.\n See {ERC721Pausable} and {Pausable-_unpause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
            },
            "functionSelector": "3f4ba83a",
            "id": 3557,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4094:2:15"
            },
            "returnParameters": {
              "id": 3543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4112:0:15"
            },
            "scope": 3583,
            "src": "4078:182:15",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5177,
              6138
            ],
            "body": {
              "id": 3577,
              "nodeType": "Block",
              "src": "4411:62:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3572,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3559,
                        "src": "4448:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3573,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3561,
                        "src": "4454:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3574,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3563,
                        "src": "4458:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3569,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "4421:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721PresetMinterPauserAutoIdUpgradeable_$3583",
                          "typeString": "contract super ERC721PresetMinterPauserAutoIdUpgradeable"
                        }
                      },
                      "id": 3571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5177,
                      "src": "4421:26:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4421:45:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3576,
                  "nodeType": "ExpressionStatement",
                  "src": "4421:45:15"
                }
              ]
            },
            "documentation": null,
            "id": 3578,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3567,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 3565,
                  "name": "ERC721Upgradeable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 6143,
                  "src": "4365:17:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721Upgradeable_$6143",
                    "typeString": "contract ERC721Upgradeable"
                  }
                },
                {
                  "contractScope": null,
                  "id": 3566,
                  "name": "ERC721PausableUpgradeable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 5182,
                  "src": "4384:25:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721PausableUpgradeable_$5182",
                    "typeString": "contract ERC721PausableUpgradeable"
                  }
                }
              ],
              "src": "4356:54:15"
            },
            "parameters": {
              "id": 3564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3559,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3578,
                  "src": "4296:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3558,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4296:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3561,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3578,
                  "src": "4310:10:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3560,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4310:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3563,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3578,
                  "src": "4322:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3562,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4322:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4295:43:15"
            },
            "returnParameters": {
              "id": 3568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4411:0:15"
            },
            "scope": 3583,
            "src": "4266:207:15",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3582,
            "mutability": "mutable",
            "name": "__gap",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3583,
            "src": "4478:25:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$49_storage",
              "typeString": "uint256[49]"
            },
            "typeName": {
              "baseType": {
                "id": 3579,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4478:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 3581,
              "length": {
                "argumentTypes": null,
                "hexValue": "3439",
                "id": 3580,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4486:2:15",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_49_by_1",
                  "typeString": "int_const 49"
                },
                "value": "49"
              },
              "nodeType": "ArrayTypeName",
              "src": "4478:11:15",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
                "typeString": "uint256[49]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 3584,
        "src": "994:3512:15"
      }
    ],
    "src": "33:4474:15"
  },
  "legacyAST": {
    "absolutePath": "@openzeppelin/contracts-upgradeable/presets/ERC721PresetMinterPauserAutoIdUpgradeable.sol",
    "exportedSymbols": {
      "ERC721PresetMinterPauserAutoIdUpgradeable": [
        3583
      ]
    },
    "id": 3584,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3368,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:15"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
        "file": "../access/AccessControlUpgradeable.sol",
        "id": 3369,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 2851,
        "src": "58:48:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol",
        "file": "../GSN/ContextUpgradeable.sol",
        "id": 3370,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 2543,
        "src": "107:39:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/utils/CountersUpgradeable.sol",
        "file": "../utils/CountersUpgradeable.sol",
        "id": 3371,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 6581,
        "src": "147:42:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol",
        "file": "../token/ERC721/ERC721Upgradeable.sol",
        "id": 3372,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 6144,
        "src": "190:47:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721BurnableUpgradeable.sol",
        "file": "../token/ERC721/ERC721BurnableUpgradeable.sol",
        "id": 3373,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 5115,
        "src": "238:55:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721PausableUpgradeable.sol",
        "file": "../token/ERC721/ERC721PausableUpgradeable.sol",
        "id": 3374,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 5183,
        "src": "294:55:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol",
        "file": "../proxy/Initializable.sol",
        "id": 3375,
        "nodeType": "ImportDirective",
        "scope": 3584,
        "sourceUnit": 3655,
        "src": "350:36:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3377,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3654,
              "src": "1048:13:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$3654",
                "typeString": "contract Initializable"
              }
            },
            "id": 3378,
            "nodeType": "InheritanceSpecifier",
            "src": "1048:13:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3379,
              "name": "ContextUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2542,
              "src": "1063:18:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContextUpgradeable_$2542",
                "typeString": "contract ContextUpgradeable"
              }
            },
            "id": 3380,
            "nodeType": "InheritanceSpecifier",
            "src": "1063:18:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3381,
              "name": "AccessControlUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2850,
              "src": "1083:24:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AccessControlUpgradeable_$2850",
                "typeString": "contract AccessControlUpgradeable"
              }
            },
            "id": 3382,
            "nodeType": "InheritanceSpecifier",
            "src": "1083:24:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3383,
              "name": "ERC721BurnableUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5114,
              "src": "1109:25:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721BurnableUpgradeable_$5114",
                "typeString": "contract ERC721BurnableUpgradeable"
              }
            },
            "id": 3384,
            "nodeType": "InheritanceSpecifier",
            "src": "1109:25:15"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3385,
              "name": "ERC721PausableUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 5182,
              "src": "1136:25:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721PausableUpgradeable_$5182",
                "typeString": "contract ERC721PausableUpgradeable"
              }
            },
            "id": 3386,
            "nodeType": "InheritanceSpecifier",
            "src": "1136:25:15"
          }
        ],
        "contractDependencies": [
          2542,
          2850,
          2925,
          2937,
          3654,
          5114,
          5182,
          6143,
          6174,
          6201,
          6335,
          7541
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 3376,
          "nodeType": "StructuredDocumentation",
          "src": "388:605:15",
          "text": " @dev {ERC721} token, including:\n  - ability for holders to burn (destroy) their tokens\n  - a minter role that allows for token minting (creation)\n  - a pauser role that allows to stop all token transfers\n  - token ID and URI autogeneration\n This contract uses {AccessControl} to lock permissioned functions using the\n different roles - head to its documentation for details.\n The account that deploys the contract will be granted the minter and pauser\n roles, as well as the default admin role, which will let it grant both minter\n and pauser roles to other accounts."
        },
        "fullyImplemented": true,
        "id": 3583,
        "linearizedBaseContracts": [
          3583,
          5182,
          7541,
          5114,
          6143,
          6174,
          6201,
          6335,
          2925,
          2937,
          2850,
          2542,
          3654
        ],
        "name": "ERC721PresetMinterPauserAutoIdUpgradeable",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3403,
              "nodeType": "Block",
              "src": "1280:77:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3398,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3388,
                        "src": "1328:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3399,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3390,
                        "src": "1334:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3400,
                        "name": "baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3392,
                        "src": "1342:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3397,
                      "name": "__ERC721PresetMinterPauserAutoId_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3461,
                      "src": "1290:37:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory)"
                      }
                    },
                    "id": 3401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1290:60:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3402,
                  "nodeType": "ExpressionStatement",
                  "src": "1290:60:15"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "a6487c53",
            "id": 3404,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3395,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3394,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3631,
                  "src": "1268:11:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1268:11:15"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3388,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3404,
                  "src": "1188:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3387,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3390,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3404,
                  "src": "1208:20:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3389,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1208:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3392,
                  "mutability": "mutable",
                  "name": "baseURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3404,
                  "src": "1230:21:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3391,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1230:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1187:65:15"
            },
            "returnParameters": {
              "id": 3396,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1280:0:15"
            },
            "scope": 3583,
            "src": "1168:189:15",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 3407,
            "libraryName": {
              "contractScope": null,
              "id": 3405,
              "name": "CountersUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6580,
              "src": "1368:19:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CountersUpgradeable_$6580",
                "typeString": "library CountersUpgradeable"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "1362:58:15",
            "typeName": {
              "contractScope": null,
              "id": 3406,
              "name": "CountersUpgradeable.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6540,
              "src": "1392:27:15",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$6540_storage_ptr",
                "typeString": "struct CountersUpgradeable.Counter"
              }
            }
          },
          {
            "constant": true,
            "functionSelector": "d5391393",
            "id": 3412,
            "mutability": "constant",
            "name": "MINTER_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3583,
            "src": "1426:62:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3408,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1426:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "4d494e5445525f524f4c45",
                  "id": 3410,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1474:13:15",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  },
                  "value": "MINTER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                    "typeString": "literal_string \"MINTER_ROLE\""
                  }
                ],
                "id": 3409,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1464:9:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 3411,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1464:24:15",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "e63ab1e9",
            "id": 3417,
            "mutability": "constant",
            "name": "PAUSER_ROLE",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3583,
            "src": "1494:62:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3413,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1494:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "argumentTypes": null,
              "arguments": [
                {
                  "argumentTypes": null,
                  "hexValue": "5041555345525f524f4c45",
                  "id": 3415,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1542:13:15",
                  "subdenomination": null,
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  },
                  "value": "PAUSER_ROLE"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                    "typeString": "literal_string \"PAUSER_ROLE\""
                  }
                ],
                "id": 3414,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "1532:9:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 3416,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1532:24:15",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3419,
            "mutability": "mutable",
            "name": "_tokenIdTracker",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3583,
            "src": "1563:51:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$6540_storage",
              "typeString": "struct CountersUpgradeable.Counter"
            },
            "typeName": {
              "contractScope": null,
              "id": 3418,
              "name": "CountersUpgradeable.Counter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6540,
              "src": "1563:27:15",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$6540_storage_ptr",
                "typeString": "struct CountersUpgradeable.Counter"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 3460,
              "nodeType": "Block",
              "src": "2009:370:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3431,
                      "name": "__Context_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2517,
                      "src": "2019:24:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2019:26:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3433,
                  "nodeType": "ExpressionStatement",
                  "src": "2019:26:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3434,
                      "name": "__AccessControl_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2571,
                      "src": "2055:30:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2055:32:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3436,
                  "nodeType": "ExpressionStatement",
                  "src": "2055:32:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3437,
                      "name": "__ERC165_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2886,
                      "src": "2097:23:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2097:25:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3439,
                  "nodeType": "ExpressionStatement",
                  "src": "2097:25:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3441,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3422,
                        "src": "2156:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3442,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3424,
                        "src": "2162:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3440,
                      "name": "__ERC721_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5314,
                      "src": "2132:23:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 3443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2132:37:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3444,
                  "nodeType": "ExpressionStatement",
                  "src": "2132:37:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3445,
                      "name": "__ERC721Burnable_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5089,
                      "src": "2179:31:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2179:33:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3447,
                  "nodeType": "ExpressionStatement",
                  "src": "2179:33:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3448,
                      "name": "__Pausable_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7474,
                      "src": "2222:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2222:27:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3450,
                  "nodeType": "ExpressionStatement",
                  "src": "2222:27:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3451,
                      "name": "__ERC721Pausable_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5150,
                      "src": "2259:31:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2259:33:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3453,
                  "nodeType": "ExpressionStatement",
                  "src": "2259:33:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3455,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3422,
                        "src": "2350:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3456,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3424,
                        "src": "2356:6:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3457,
                        "name": "baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3426,
                        "src": "2364:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3454,
                      "name": "__ERC721PresetMinterPauserAutoId_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3495,
                      "src": "2302:47:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory,string memory)"
                      }
                    },
                    "id": 3458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2302:70:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3459,
                  "nodeType": "ExpressionStatement",
                  "src": "2302:70:15"
                }
              ]
            },
            "documentation": {
              "id": 3420,
              "nodeType": "StructuredDocumentation",
              "src": "1621:250:15",
              "text": " @dev Grants `DEFAULT_ADMIN_ROLE`, `MINTER_ROLE` and `PAUSER_ROLE` to the\n account that deploys the contract.\n Token URIs will be autogenerated based on `baseURI` and their token IDs.\n See {ERC721-tokenURI}."
            },
            "id": 3461,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3429,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3428,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3631,
                  "src": "1997:11:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1997:11:15"
              }
            ],
            "name": "__ERC721PresetMinterPauserAutoId_init",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3422,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3461,
                  "src": "1923:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3421,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1923:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3424,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3461,
                  "src": "1943:20:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3423,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1943:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3426,
                  "mutability": "mutable",
                  "name": "baseURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3461,
                  "src": "1965:21:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3425,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1965:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1922:65:15"
            },
            "returnParameters": {
              "id": 3430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2009:0:15"
            },
            "scope": 3583,
            "src": "1876:503:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3494,
              "nodeType": "Block",
              "src": "2528:187:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3473,
                        "name": "DEFAULT_ADMIN_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2589,
                        "src": "2549:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3474,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2526,
                          "src": "2569:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 3475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2569:12:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 3472,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2772,
                      "src": "2538:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 3476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2538:44:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3477,
                  "nodeType": "ExpressionStatement",
                  "src": "2538:44:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3479,
                        "name": "MINTER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3412,
                        "src": "2604:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3480,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2526,
                          "src": "2617:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 3481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2617:12:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 3478,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2772,
                      "src": "2593:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 3482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2593:37:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3483,
                  "nodeType": "ExpressionStatement",
                  "src": "2593:37:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3485,
                        "name": "PAUSER_ROLE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3417,
                        "src": "2651:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 3486,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2526,
                          "src": "2664:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 3487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2664:12:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 3484,
                      "name": "_setupRole",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2772,
                      "src": "2640:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 3488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2640:37:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3489,
                  "nodeType": "ExpressionStatement",
                  "src": "2640:37:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3491,
                        "name": "baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3467,
                        "src": "2700:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3490,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6047,
                      "src": "2688:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 3492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2688:20:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3493,
                  "nodeType": "ExpressionStatement",
                  "src": "2688:20:15"
                }
              ]
            },
            "documentation": null,
            "id": 3495,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3470,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3469,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3631,
                  "src": "2516:11:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2516:11:15"
              }
            ],
            "name": "__ERC721PresetMinterPauserAutoId_init_unchained",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3463,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3495,
                  "src": "2442:18:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3462,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2442:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3465,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3495,
                  "src": "2462:20:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3464,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2462:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3467,
                  "mutability": "mutable",
                  "name": "baseURI",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3495,
                  "src": "2484:21:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3466,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2484:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2441:65:15"
            },
            "returnParameters": {
              "id": 3471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2528:0:15"
            },
            "scope": 3583,
            "src": "2385:330:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3522,
              "nodeType": "Block",
              "src": "3131:359:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3503,
                            "name": "MINTER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3412,
                            "src": "3157:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3504,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2526,
                              "src": "3170:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 3505,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3170:12:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 3502,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "3149:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 3506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3149:34:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d7573742068617665206d696e74657220726f6c6520746f206d696e74",
                        "id": 3507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3185:63:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea198f3e8a5129d820e5e0bb8ade0f42a56b75e06362ce80ffa86409143aedbb",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have minter role to mint\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have minter role to mint"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea198f3e8a5129d820e5e0bb8ade0f42a56b75e06362ce80ffa86409143aedbb",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have minter role to mint\""
                        }
                      ],
                      "id": 3501,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3141:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3141:108:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3509,
                  "nodeType": "ExpressionStatement",
                  "src": "3141:108:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3511,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3498,
                        "src": "3416:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "argumentTypes": null,
                            "id": 3512,
                            "name": "_tokenIdTracker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3419,
                            "src": "3420:15:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$6540_storage",
                              "typeString": "struct CountersUpgradeable.Counter storage ref"
                            }
                          },
                          "id": 3513,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "current",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 6551,
                          "src": "3420:23:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$6540_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$6540_storage_ptr_$",
                            "typeString": "function (struct CountersUpgradeable.Counter storage pointer) view returns (uint256)"
                          }
                        },
                        "id": 3514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3420:25:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3510,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5875,
                      "src": "3410:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3410:36:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3516,
                  "nodeType": "ExpressionStatement",
                  "src": "3410:36:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3517,
                        "name": "_tokenIdTracker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3419,
                        "src": "3456:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$6540_storage",
                          "typeString": "struct CountersUpgradeable.Counter storage ref"
                        }
                      },
                      "id": 3519,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6563,
                      "src": "3456:25:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$6540_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$6540_storage_ptr_$",
                        "typeString": "function (struct CountersUpgradeable.Counter storage pointer)"
                      }
                    },
                    "id": 3520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3456:27:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3521,
                  "nodeType": "ExpressionStatement",
                  "src": "3456:27:15"
                }
              ]
            },
            "documentation": {
              "id": 3496,
              "nodeType": "StructuredDocumentation",
              "src": "2721:364:15",
              "text": " @dev Creates a new token for `to`. Its token ID will be automatically\n assigned (and available on the emitted {IERC721-Transfer} event), and the token\n URI autogenerated based on the base URI passed at construction.\n See {ERC721-_mint}.\n Requirements:\n - the caller must have the `MINTER_ROLE`."
            },
            "functionSelector": "6a627842",
            "id": 3523,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3499,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3498,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3523,
                  "src": "3104:10:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3497,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3104:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3103:12:15"
            },
            "returnParameters": {
              "id": 3500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3131:0:15"
            },
            "scope": 3583,
            "src": "3090:400:15",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3539,
              "nodeType": "Block",
              "src": "3726:144:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3529,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3417,
                            "src": "3752:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3530,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2526,
                              "src": "3765:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 3531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3765:12:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 3528,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "3744:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 3532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3744:34:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f207061757365",
                        "id": 3533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3780:64:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_40c9c95e9f416c51c55d88e1508883bb887c746928503de15b750cf10a750aef",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have pauser role to pause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_40c9c95e9f416c51c55d88e1508883bb887c746928503de15b750cf10a750aef",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to pause\""
                        }
                      ],
                      "id": 3527,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3736:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3736:109:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3535,
                  "nodeType": "ExpressionStatement",
                  "src": "3736:109:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3536,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7520,
                      "src": "3855:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3855:8:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3538,
                  "nodeType": "ExpressionStatement",
                  "src": "3855:8:15"
                }
              ]
            },
            "documentation": {
              "id": 3524,
              "nodeType": "StructuredDocumentation",
              "src": "3496:193:15",
              "text": " @dev Pauses all token transfers.\n See {ERC721Pausable} and {Pausable-_pause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
            },
            "functionSelector": "8456cb59",
            "id": 3540,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3708:2:15"
            },
            "returnParameters": {
              "id": 3526,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3726:0:15"
            },
            "scope": 3583,
            "src": "3694:176:15",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3556,
              "nodeType": "Block",
              "src": "4112:148:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3546,
                            "name": "PAUSER_ROLE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3417,
                            "src": "4138:11:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 3547,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2526,
                              "src": "4151:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                                "typeString": "function () view returns (address payable)"
                              }
                            },
                            "id": 3548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4151:12:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 3545,
                          "name": "hasRole",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2635,
                          "src": "4130:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                            "typeString": "function (bytes32,address) view returns (bool)"
                          }
                        },
                        "id": 3549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4130:34:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4552433732315072657365744d696e7465725061757365724175746f49643a206d75737420686176652070617573657220726f6c6520746f20756e7061757365",
                        "id": 3550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4166:66:15",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3877585dfb2235e1900eee5d9e32a457b9d6148f93823a62cb07ae76c6585a8",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\""
                        },
                        "value": "ERC721PresetMinterPauserAutoId: must have pauser role to unpause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3877585dfb2235e1900eee5d9e32a457b9d6148f93823a62cb07ae76c6585a8",
                          "typeString": "literal_string \"ERC721PresetMinterPauserAutoId: must have pauser role to unpause\""
                        }
                      ],
                      "id": 3544,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4122:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4122:111:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3552,
                  "nodeType": "ExpressionStatement",
                  "src": "4122:111:15"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3553,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7536,
                      "src": "4243:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4243:10:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3555,
                  "nodeType": "ExpressionStatement",
                  "src": "4243:10:15"
                }
              ]
            },
            "documentation": {
              "id": 3541,
              "nodeType": "StructuredDocumentation",
              "src": "3876:197:15",
              "text": " @dev Unpauses all token transfers.\n See {ERC721Pausable} and {Pausable-_unpause}.\n Requirements:\n - the caller must have the `PAUSER_ROLE`."
            },
            "functionSelector": "3f4ba83a",
            "id": 3557,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4094:2:15"
            },
            "returnParameters": {
              "id": 3543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4112:0:15"
            },
            "scope": 3583,
            "src": "4078:182:15",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              5177,
              6138
            ],
            "body": {
              "id": 3577,
              "nodeType": "Block",
              "src": "4411:62:15",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3572,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3559,
                        "src": "4448:4:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3573,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3561,
                        "src": "4454:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3574,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3563,
                        "src": "4458:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3569,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "4421:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721PresetMinterPauserAutoIdUpgradeable_$3583",
                          "typeString": "contract super ERC721PresetMinterPauserAutoIdUpgradeable"
                        }
                      },
                      "id": 3571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5177,
                      "src": "4421:26:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 3575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4421:45:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3576,
                  "nodeType": "ExpressionStatement",
                  "src": "4421:45:15"
                }
              ]
            },
            "documentation": null,
            "id": 3578,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3567,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 3565,
                  "name": "ERC721Upgradeable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 6143,
                  "src": "4365:17:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721Upgradeable_$6143",
                    "typeString": "contract ERC721Upgradeable"
                  }
                },
                {
                  "contractScope": null,
                  "id": 3566,
                  "name": "ERC721PausableUpgradeable",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 5182,
                  "src": "4384:25:15",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721PausableUpgradeable_$5182",
                    "typeString": "contract ERC721PausableUpgradeable"
                  }
                }
              ],
              "src": "4356:54:15"
            },
            "parameters": {
              "id": 3564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3559,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3578,
                  "src": "4296:12:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3558,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4296:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3561,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3578,
                  "src": "4310:10:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3560,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4310:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3563,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3578,
                  "src": "4322:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3562,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4322:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4295:43:15"
            },
            "returnParameters": {
              "id": 3568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4411:0:15"
            },
            "scope": 3583,
            "src": "4266:207:15",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3582,
            "mutability": "mutable",
            "name": "__gap",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 3583,
            "src": "4478:25:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$49_storage",
              "typeString": "uint256[49]"
            },
            "typeName": {
              "baseType": {
                "id": 3579,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4478:7:15",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 3581,
              "length": {
                "argumentTypes": null,
                "hexValue": "3439",
                "id": 3580,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4486:2:15",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_49_by_1",
                  "typeString": "int_const 49"
                },
                "value": "49"
              },
              "nodeType": "ArrayTypeName",
              "src": "4478:11:15",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
                "typeString": "uint256[49]"
              }
            },
            "value": null,
            "visibility": "private"
          }
        ],
        "scope": 3584,
        "src": "994:3512:15"
      }
    ],
    "src": "33:4474:15"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.2",
  "updatedAt": "2021-03-24T02:22:38.370Z",
  "devdoc": {
    "details": "{ERC721} token, including:  - ability for holders to burn (destroy) their tokens  - a minter role that allows for token minting (creation)  - a pauser role that allows to stop all token transfers  - token ID and URI autogeneration This contract uses {AccessControl} to lock permissioned functions using the different roles - head to its documentation for details. The account that deploys the contract will be granted the minter and pauser roles, as well as the default admin role, which will let it grant both minter and pauser roles to other accounts.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a prefix in {tokenURI} to each token's URI, or to the token ID if no specific URI is set for that token ID."
      },
      "burn(uint256)": {
        "details": "Burns `tokenId`. See {ERC721-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "getRoleAdmin(bytes32)": {
        "details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
      },
      "getRoleMember(bytes32,uint256)": {
        "details": "Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information."
      },
      "getRoleMemberCount(bytes32)": {
        "details": "Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role."
      },
      "grantRole(bytes32,address)": {
        "details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "hasRole(bytes32,address)": {
        "details": "Returns `true` if `account` has been granted `role`."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "mint(address)": {
        "details": "Creates a new token for `to`. Its token ID will be automatically assigned (and available on the emitted {IERC721-Transfer} event), and the token URI autogenerated based on the base URI passed at construction. See {ERC721-_mint}. Requirements: - the caller must have the `MINTER_ROLE`."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "pause()": {
        "details": "Pauses all token transfers. See {ERC721Pausable} and {Pausable-_pause}. Requirements: - the caller must have the `PAUSER_ROLE`."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceRole(bytes32,address)": {
        "details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
      },
      "revokeRole(bytes32,address)": {
        "details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}. Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenByIndex(uint256)": {
        "details": "See {IERC721Enumerable-tokenByIndex}."
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "See {IERC721Enumerable-tokenOfOwnerByIndex}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "totalSupply()": {
        "details": "See {IERC721Enumerable-totalSupply}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "unpause()": {
        "details": "Unpauses all token transfers. See {ERC721Pausable} and {Pausable-_unpause}. Requirements: - the caller must have the `PAUSER_ROLE`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}